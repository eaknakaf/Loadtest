<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="DFL" enabled="true">
      <stringProp name="TestPlan.comments">eakV2</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="setUp Thread Group PreProd" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </SetupThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="User-Agent" elementType="Header">
              <stringProp name="Header.name">User-Agent</stringProp>
              <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.131 Safari/537.36</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </Arguments>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <boolProp name="HTTPSampler.image_parser">true</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
          <collectionProp name="DNSCacheManager.servers"/>
          <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
          <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
        </DNSCacheManager>
        <hashTree/>
        <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
          <collectionProp name="AuthManager.auth_list"/>
          <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
        </AuthManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
          <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
        </CookieManager>
        <hashTree/>
        <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
          <boolProp name="clearEachIteration">true</boolProp>
          <boolProp name="useExpires">false</boolProp>
          <boolProp name="CacheManager.controlledByThread">false</boolProp>
        </CacheManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="gettoken" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="grant_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
                <stringProp name="Argument.value">client_credentials</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="client_secret" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">client_secret</stringProp>
                <stringProp name="Argument.value">jh2soXz1desEwkErLGI7BgGdi6Aa</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="client_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">client_id</stringProp>
                <stringProp name="Argument.value">wjC2FKCzrYgDjR0pUlFkx_BRhu0a</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">pre-tlprompt-api.thailife.com</stringProp>
          <stringProp name="HTTPSampler.port">8243</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">https://pre-tlprompt-api.thailife.com:8243</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;92&quot;, &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;92&quot;</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="access_token JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">accessTokenLoginPin</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">${__setProperty(accessTokenLoginPin, ${accessTokenLoginPin})};

</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="setUp Thread Group UAT" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </SetupThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="User-Agent" elementType="Header">
              <stringProp name="Header.name">User-Agent</stringProp>
              <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.131 Safari/537.36</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </Arguments>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <boolProp name="HTTPSampler.image_parser">true</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
          <collectionProp name="DNSCacheManager.servers"/>
          <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
          <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
        </DNSCacheManager>
        <hashTree/>
        <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
          <collectionProp name="AuthManager.auth_list"/>
          <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
        </AuthManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
          <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
        </CookieManager>
        <hashTree/>
        <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
          <boolProp name="clearEachIteration">true</boolProp>
          <boolProp name="useExpires">false</boolProp>
          <boolProp name="CacheManager.controlledByThread">false</boolProp>
        </CacheManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="gettoken" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="grant_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
                <stringProp name="Argument.value">client_credentials</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="client_secret" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">client_secret</stringProp>
                <stringProp name="Argument.value">lsZKC44EkWC0pPqkDMI09KK8dI0a</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="client_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">client_id</stringProp>
                <stringProp name="Argument.value">m5yl1UYyGFaI1yw9MHEL1aPZuwka</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">uat-tlproplus-api.thailife.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;92&quot;, &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;92&quot;</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="access_token JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">accessTokenLoginPin</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">${__setProperty(accessTokenLoginPin, ${accessTokenLoginPin})};

</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.131 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="duration" elementType="Argument">
            <stringProp name="Argument.name">duration</stringProp>
            <stringProp name="Argument.value">1800</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="URL" elementType="Argument">
            <stringProp name="Argument.name">URL</stringProp>
            <stringProp name="Argument.value">pre-tlproplus-api.thailife.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">uat-tlproplus-api.thailife.com</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Test" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POL02 - policyDisplay [DDCX]" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headerData&quot;:{&#xd;
        &quot;messageId&quot;:&quot;Send Email&quot;,&#xd;
        &quot;sentDateTime&quot;:&quot;03-11-2017T09:08:18:066&quot;,&#xd;
        &quot;responseDateTime&quot;:&quot;03-11-2017T09:08:18.066&quot;,&#xd;
        &quot;recordPerPage&quot;:&quot;1&quot;,&#xd;
        &quot;requestPage&quot;:&quot;2&quot;,&#xd;
        &quot;totalRecord&quot;:&quot;10&quot;&#xd;
    },&#xd;
    &quot;requestRecord&quot;:{&#xd;
        &quot;policyNo&quot;:&quot;36518221&quot;,&#xd;
        &quot;noBook&quot; : &quot;&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8280</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">interfaceCsv/rest/calculate/policyDisplay/1.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;92&quot;, &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;92&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(accessTokenLoginPin)}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POL03 - policyPrmeium [DDCX]" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;headerData&quot;: {&#xd;
        &quot;messageId&quot;: &quot;3fde79860c7b12da&quot;,&#xd;
        &quot;sentDateTime&quot;: &quot;06-11-2017T09:46:53.384&quot;,&#xd;
        &quot;responseDateTime&quot;: &quot;06-11-2017T09:46:53.384&quot;,&#xd;
        &quot;recordPerPage&quot;: &quot;0&quot;,&#xd;
        &quot;requestPage&quot;:&quot;1&quot;,&#xd;
        &quot;totalRecord&quot;:&quot;2&quot;&#xd;
    },&#xd;
        &quot;requestRecord&quot;:{&#xd;
                &quot;policyNo&quot;: &quot;20581997&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8280</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">interfaceCsv/rest/calculate/policyPremium/1.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;92&quot;, &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;92&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(accessTokenLoginPin)}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POL05 - policyLoan [DDCX]" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;headerData&quot;: {&#xd;
        &quot;messageId&quot;: &quot;3fde79860c7b12da&quot;,&#xd;
        &quot;sentDateTime&quot;: &quot;06-11-2017T09:46:53.384&quot;,&#xd;
        &quot;responseDateTime&quot;: &quot;06-11-2017T09:46:53.384&quot;,&#xd;
        &quot;recordPerPage&quot;: &quot;0&quot;,&#xd;
        &quot;requestPage&quot;:&quot;1&quot;,&#xd;
        &quot;totalRecord&quot;:&quot;2&quot;&#xd;
    },&#xd;
        &quot;requestRecord&quot;:{&#xd;
                &quot;policyNo&quot;:&quot;20070489&quot;&#xd;
        }&#xd;
        &#xd;
        &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8243</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/interfaceCsv/rest/policy/policyLoan/1.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;92&quot;, &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;92&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(accessTokenLoginPin)}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CAL08 - calculatePremium [DDCX]" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;headerData&quot;: {&#xd;
        &quot;messageId&quot;: &quot;3fde79860c7b12da&quot;,&#xd;
        &quot;sentDateTime&quot;: &quot;06-11-2017T09:46:53.384&quot;,&#xd;
        &quot;responseDateTime&quot;: &quot;06-11-2017T09:46:53.384&quot;,&#xd;
        &quot;recordPerPage&quot;: &quot;0&quot;,&#xd;
        &quot;requestPage&quot;:&quot;1&quot;,&#xd;
        &quot;totalRecord&quot;:&quot;2&quot;&#xd;
    },&#xd;
        &quot;requestRecord&quot;:{&#xd;
                &quot;policyNo&quot;:&quot;22032628&quot;,&#xd;
                &quot;date&quot;:&quot;28/08/2564&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8280</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">interfaceCsv/rest/calculate/calculatePremium/1.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;92&quot;, &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;92&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(accessTokenLoginPin)}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POL09 - policyDisplayUL [DDCX]" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;headerData&quot;: {&#xd;
        &quot;messageId&quot;: &quot;3fde79860c7b12da&quot;,&#xd;
        &quot;sentDateTime&quot;: &quot;06-11-2017T09:46:53.384&quot;,&#xd;
        &quot;responseDateTime&quot;: &quot;06-11-2017T09:46:53.384&quot;,&#xd;
        &quot;recordPerPage&quot;: &quot;0&quot;,&#xd;
        &quot;requestPage&quot;:&quot;1&quot;,&#xd;
        &quot;totalRecord&quot;:&quot;2&quot;&#xd;
    },&#xd;
        &quot;requestRecord&quot;:{&#xd;
                &quot;policyNo&quot;:&quot;22788187&quot;&#xd;
        }              &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8280</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">interfaceCsv/rest/policy/policyDisplayUL/1.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;92&quot;, &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;92&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(accessTokenLoginPin)}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CAL09-1 - calculateBenefit-CashNotReceived [DDCX]" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
   &quot;headerData&quot;:{&#xd;
       &quot;messageId&quot;:&quot;Send Email&quot;,&#xd;
       &quot;sentDateTime&quot;:&quot;03-11-2017T09:08:18:066&quot;,&#xd;
       &quot;responseDateTime&quot;:&quot;03-11-2017T09:08:18.066&quot;,&#xd;
       &quot;recordPerPage&quot;:&quot;1&quot;,&#xd;
       &quot;requestPage&quot;:&quot;2&quot;,&#xd;
       &quot;totalRecord&quot;:&quot;10&quot;&#xd;
   },&#xd;
   &quot;requestRecord&quot;:{&#xd;
       &quot;policyNo&quot;:&quot;22023271&quot;,&#xd;
       &quot;date&quot;:&quot;28/08/2564&quot;,&#xd;
       &quot;typeData&quot;:&quot;&quot;&#xd;
   }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8280</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">CalPOS/calculate/calculateBenefit/cashNotReceived/1.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;92&quot;, &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;92&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(accessTokenLoginPin)}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CAL09-2 - calculateBenefit-CashReceived [DDCX]" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
   &quot;headerData&quot;:{&#xd;
       &quot;messageId&quot;:&quot;Send Email&quot;,&#xd;
       &quot;sentDateTime&quot;:&quot;03-11-2017T09:08:18:066&quot;,&#xd;
       &quot;responseDateTime&quot;:&quot;03-11-2017T09:08:18.066&quot;,&#xd;
       &quot;recordPerPage&quot;:&quot;1&quot;,&#xd;
       &quot;requestPage&quot;:&quot;2&quot;,&#xd;
       &quot;totalRecord&quot;:&quot;10&quot;&#xd;
   },&#xd;
   &quot;requestRecord&quot;:{&#xd;
       &quot;policyNo&quot;:&quot;22023271&quot;,&#xd;
       &quot;date&quot;:&quot;28/08/2564&quot;,&#xd;
       &quot;typeData&quot;:&quot;&quot;&#xd;
   }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8243</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">CalPOS/calculate/calculateBenefit/cashReceived/1.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;92&quot;, &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;92&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(accessTokenLoginPin)}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CAL09-3 - calculateBenefit-Contact [DDCX]" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
   &quot;headerData&quot;:{&#xd;
       &quot;messageId&quot;:&quot;Send Email&quot;,&#xd;
       &quot;sentDateTime&quot;:&quot;03-11-2017T09:08:18:066&quot;,&#xd;
       &quot;responseDateTime&quot;:&quot;03-11-2017T09:08:18.066&quot;,&#xd;
       &quot;recordPerPage&quot;:&quot;1&quot;,&#xd;
       &quot;requestPage&quot;:&quot;2&quot;,&#xd;
       &quot;totalRecord&quot;:&quot;10&quot;&#xd;
   },&#xd;
   &quot;requestRecord&quot;:{&#xd;
       &quot;policyNo&quot;:&quot;20011659&quot;,&#xd;
       &quot;typeData&quot;:&quot;&quot;,&#xd;
       &quot;date&quot;:&quot;25/8/2564&quot;&#xd;
   }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8280</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">CalPOS/calculate/calculateBenefit/contactNotReceived/1.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;92&quot;, &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;92&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(accessTokenLoginPin)}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CAL09-4 - calculateBenefit-Mature [DDCX]" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
   &quot;headerData&quot;:{&#xd;
       &quot;messageId&quot;:&quot;Send Email&quot;,&#xd;
       &quot;sentDateTime&quot;:&quot;03-11-2017T09:08:18:066&quot;,&#xd;
       &quot;responseDateTime&quot;:&quot;03-11-2017T09:08:18.066&quot;,&#xd;
       &quot;recordPerPage&quot;:&quot;1&quot;,&#xd;
       &quot;requestPage&quot;:&quot;2&quot;,&#xd;
       &quot;totalRecord&quot;:&quot;10&quot;&#xd;
   },&#xd;
   &quot;requestRecord&quot;:{&#xd;
       &quot;policyNo&quot;:&quot;22023271&quot;,&#xd;
       &quot;date&quot;:&quot;28/08/2564&quot;&#xd;
   }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8280</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">CalPOS/calculate/calculateBenefit/mature/1.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;92&quot;, &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;92&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(accessTokenLoginPin)}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CAL10-1 returnLoan [DDCX]" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headerData&quot;: {&#xd;
        &quot;messageId&quot;: &quot;04075100-a3d5-4f71-9bc7-13584589fc6b&quot;,&#xd;
        &quot;sentDateTime&quot;: &quot;02-08-2018T14:34:27.651&quot;,&#xd;
        &quot;responseDateTime&quot;: &quot;02-08-2018T14:34:27.651&quot;,&#xd;
        &quot;recordPerPage&quot;: null,&#xd;
        &quot;requestPage&quot;: null,&#xd;
        &quot;totalRecord&quot;: null&#xd;
    },&#xd;
    &quot;requestRecord&quot;: {&#xd;
        &quot;policyNo&quot;: &quot;22029551&quot;,&#xd;
        &quot;date&quot;: &quot;28/08/2564&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8280</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">CalPOS/calculate/calculateLoan/returnLoan/1.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;92&quot;, &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;92&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(accessTokenLoginPin)}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CAL10-2 requestLoan [DDCX]" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headerData&quot;: {&#xd;
        &quot;messageId&quot;: &quot;04075100-a3d5-4f71-9bc7-13584589fc6b&quot;,&#xd;
        &quot;sentDateTime&quot;: &quot;02-08-2018T14:34:27.651&quot;,&#xd;
        &quot;responseDateTime&quot;: &quot;02-08-2018T14:34:27.651&quot;,&#xd;
        &quot;recordPerPage&quot;: &quot;1&quot;,&#xd;
        &quot;requestPage&quot;: &quot;2&quot;,&#xd;
        &quot;totalRecord&quot;: &quot;10&quot;&#xd;
    },&#xd;
    &quot;requestRecord&quot;: {&#xd;
        &quot;policyNo&quot;: &quot;22029551&quot;,&#xd;
        &quot;date&quot;: &quot;28/08/2564&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8280</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">CalPOS/calculate/calculateLoan/requestLoan/1.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;92&quot;, &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;92&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(accessTokenLoginPin)}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CAL10-3 extend Loan [DDCX]]" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headerData&quot;: {&#xd;
        &quot;messageId&quot;: &quot;04075100-a3d5-4f71-9bc7-13584589fc6b&quot;,&#xd;
        &quot;sentDateTime&quot;: &quot;02-08-2018T14:34:27.651&quot;,&#xd;
        &quot;responseDateTime&quot;: &quot;02-08-2018T14:34:27.651&quot;&#xd;
    },&#xd;
    &quot;requestRecord&quot;: {&#xd;
        &quot;policyNo&quot;: &quot;22029551&quot;,&#xd;
        &quot;calculateDate&quot;: &quot;26/08/2564&quot;,&#xd;
        &quot;year&quot; : &quot;1&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8280</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">CalPOS/calculate/calculateLoan/extendLoan/1.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;92&quot;, &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;92&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(accessTokenLoginPin)}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CAL12-1 surender [DDCX]" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;headerData&quot;: {&#xd;
        &quot;messageId&quot;: &quot;3fde79860c7b12da&quot;,&#xd;
        &quot;sentDateTime&quot;: &quot;06-11-2017T09:46:53.384&quot;,&#xd;
        &quot;responseDateTime&quot;: &quot;06-11-2017T09:46:53.384&quot;,&#xd;
        &quot;recordPerPage&quot;: &quot;0&quot;,&#xd;
        &quot;requestPage&quot;:&quot;1&quot;,&#xd;
        &quot;totalRecord&quot;:&quot;2&quot;&#xd;
    },&#xd;
        &quot;requestRecord&quot;:{&#xd;
                &quot;policyNo&quot;:&quot;22029551&quot;,&#xd;
                &quot;date&quot;:&quot;26/08/2564&quot;&#xd;
        }              &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8280</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">CalPOS/calculate/calculateCancel/surender/1.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;92&quot;, &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;92&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(accessTokenLoginPin)}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CAL12-2 cancel-extend [DDCX]" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;headerData&quot;: {&#xd;
        &quot;messageId&quot;: &quot;3fde79860c7b12da&quot;,&#xd;
        &quot;sentDateTime&quot;: &quot;06-11-2017T09:46:53.384&quot;,&#xd;
        &quot;responseDateTime&quot;: &quot;06-11-2017T09:46:53.384&quot;,&#xd;
        &quot;recordPerPage&quot;: &quot;0&quot;,&#xd;
        &quot;requestPage&quot;:&quot;1&quot;,&#xd;
        &quot;totalRecord&quot;:&quot;2&quot;&#xd;
    },&#xd;
        &quot;requestRecord&quot;:{&#xd;
                &quot;policyNo&quot;:&quot;22029551&quot;,&#xd;
                &quot;date&quot;:&quot;26/08/2564&quot;&#xd;
        }              &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8280</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">CalPOS/calculate/calculateCancel/extend/1.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;92&quot;, &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;92&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(accessTokenLoginPin)}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CAL12-3 cancel-paid up [DDCX]" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headerData&quot;: {&#xd;
        &quot;messageId&quot;: &quot;3fde79860c7b12da&quot;,&#xd;
        &quot;sentDateTime&quot;: &quot;06-11-2017T09:46:53.384&quot;,&#xd;
        &quot;responseDateTime&quot;: &quot;06-11-2017T09:46:53.384&quot;&#xd;
        },&#xd;
    &quot;requestRecord&quot;:{&#xd;
        &quot;customerId&quot;:&quot;5106901&quot;,&#xd;
        &quot;channel&quot; : &quot;A&quot;&#xd;
    }        &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8280</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">customerClaim/claimDetail/1.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;92&quot;, &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;92&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(accessTokenLoginPin)}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CLM10 - ClaimDetail [DDCX]" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;headerData&quot;: {&#xd;
        &quot;messageId&quot;: &quot;3fde79860c7b12da&quot;,&#xd;
        &quot;sentDateTime&quot;: &quot;06-11-2017T09:46:53.384&quot;,&#xd;
        &quot;responseDateTime&quot;: &quot;06-11-2017T09:46:53.384&quot;,&#xd;
        &quot;recordPerPage&quot;: &quot;0&quot;,&#xd;
        &quot;requestPage&quot;:&quot;1&quot;,&#xd;
        &quot;totalRecord&quot;:&quot;2&quot;&#xd;
    },&#xd;
        &quot;requestRecord&quot;:{&#xd;
                &quot;policyNo&quot;:&quot;22029551&quot;,&#xd;
                &quot;date&quot;:&quot;26/08/2564&quot;&#xd;
        }              &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8280</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">CalPOS/calculate/calculateCancel/paidUp/1.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;92&quot;, &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;92&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(accessTokenLoginPin)}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POL_DB_01_SearchPolicyByCustomerId Copy" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headerData&quot;: {&#xd;
        &quot;messageId&quot;: &quot;3fe0a3c63603b7ea&quot;,&#xd;
        &quot;sentDateTime&quot;: &quot;12-11-2019 13:47:01&quot;&#xd;
    },&#xd;
    &quot;requestRecord&quot;: {&#xd;
        &quot;customer_id&quot;: &quot;5106901&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">10.102.63.62</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">PolicyDataService/SearchPolicyByCustomerId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;92&quot;, &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;92&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(accessTokenLoginPin)}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POL_DB_05_GetRiderDetial [DDCX]" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headerData&quot;: {&#xd;
        &quot;messageId&quot;: &quot;3fe0a3c63603b7ea&quot;,&#xd;
        &quot;sentDateTime&quot;: &quot;03-11-2017 09:08:18&quot;,&#xd;
        &quot;responseDateTime&quot;: &quot;&quot;&#xd;
        },&#xd;
     &quot;requestRecord&quot;: {&#xd;
             &quot;policyno&quot;:&quot;23250904&quot;,&#xd;
             &quot;certno&quot;:&quot;&quot;,&#xd;
             &quot;type&quot;:&quot;xx-OL-xx&quot;&#xd;
     }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8280</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">PolicyDataService/GetRiderDetial</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;92&quot;, &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;92&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(accessTokenLoginPin)}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BCP-DDCX-01 - payChannelSelect" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headerData&quot;: {&#xd;
        &quot;messageId&quot;: &quot;3fe0a3c63603b7ea&quot;,&#xd;
        &quot;sentDateTime&quot;: &quot;14-11-2019 15:38:40&quot;&#xd;
    },&#xd;
    &quot;requestRecord&quot;: {&#xd;
        &quot;policyType&quot;: &quot;O&quot;,&#xd;
        &quot;policyNo&quot;: &quot;20974563&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8280</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">InquiryCreditPayment/rest/service/inquiry</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;92&quot;, &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;92&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(accessTokenLoginPin)}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BCP-DDCX-02 - PaymentHistory by Policy" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headerData&quot;: {&#xd;
        &quot;messageId&quot;: &quot;3fe0a3c63603b7ea&quot;,&#xd;
        &quot;sentDateTime&quot;: &quot;14-11-2019 15:38:40&quot;&#xd;
    },&#xd;
    &quot;requestRecord&quot;: {&#xd;
        &quot;policyType&quot;: &quot;O&quot;,&#xd;
        &quot;policyNo&quot;: &quot;20974563&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8280</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">ReceiptHistory/rest/service/inquire</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;92&quot;, &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;92&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(accessTokenLoginPin)}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BCP-DDCX-03 -  ค้นหาประวัติการชำระเบี้ยประกันภัยทุกงวดชำระจนถึงปัจจุบัน" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headerData&quot;: {&#xd;
        &quot;messageId&quot;: &quot;3fe0a3c63603b7ea&quot;,&#xd;
        &quot;sentDateTime&quot;: &quot;14-11-2019 15:38:40&quot;&#xd;
    },&#xd;
    &quot;requestRecord&quot;: {&#xd;
        &quot;policyType&quot;: &quot;O&quot;,&#xd;
        &quot;receiptNo&quot;: &quot;849610000861&quot;&#xd;
    }&#xd;
}&#xd;
 &#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8280</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">ReceiptHistoryDetail/rest/receipt/1.0/detail</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;92&quot;, &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;92&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(accessTokenLoginPin)}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="FindRenewalDate" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;policyNo&quot; : &quot;23007537&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8243</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">PolicyDetailWS/policyDetailService/findRenewalDate/1.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;92&quot;, &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;92&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(accessTokenLoginPin)}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POL15-certfamily" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headerData&quot; : {&#xd;
	&quot;messageId&quot; : &quot;251e807e-1242-4805-8ad8-74066eb364ee&quot;,&#xd;
	&quot;sentDateTime&quot; : &quot;03-08-2018T15:16:15.746&quot;,&#xd;
	&quot;responseDateTime&quot; : &quot;03-08-2018T15:16:15.746&quot;&#xd;
	},&#xd;
	&quot;body&quot; : {&#xd;
		&quot;policyNo&quot; : &quot;M004&quot;,&#xd;
        &quot;certNo&quot; : &quot;00013832&quot;&#xd;
}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8243</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">certfamily/members</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;92&quot;, &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;92&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(accessTokenLoginPin)}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetMatureRate-01" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;policyNo&quot; : &quot;36518221&quot;,&#xd;
    &quot;planCode&quot; : &quot;WY20&quot;,&#xd;
    &quot;sum&quot; : &quot;100000&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8243</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">MatureWS/matureService/getMatureRate/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;92&quot;, &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;92&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(accessTokenLoginPin)}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PF001-policyBenefit" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headerData&quot; : {&#xd;
	&quot;messageId&quot; : &quot;251e807e-1242-4805-8ad8-74066eb364ee&quot;,&#xd;
	&quot;sentDateTime&quot; : &quot;03-08-2018T15:16:15.746&quot;,&#xd;
	&quot;responseDateTime&quot; : &quot;03-08-2018T15:16:15.746&quot;,&#xd;
	&quot;recordPerPage&quot; : &quot;&quot;,&#xd;
	&quot;requestPage&quot; : &quot;&quot;,&#xd;
	&quot;totalRecord&quot; : &quot;&quot;&#xd;
	},&#xd;
	&quot;requestRecord&quot; : {&#xd;
		&quot;policyNo&quot; : &quot;36518221&quot;&#xd;
}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8280</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">policybenefit/ws/rest/getPolicyBenefit/1.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;92&quot;, &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;92&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(accessTokenLoginPin)}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UNW-01 searchApplication [DDCX]" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headerData&quot;: {&#xd;
        &quot;messageId&quot;: &quot;123456789&quot;,&#xd;
        &quot;sentDateTime&quot;: &quot;2020-12-08 15:15:59&quot;,&#xd;
        &quot;responseDateTime&quot;: null&#xd;
    },&#xd;
    &quot;requestRecord&quot;: {&#xd;
    	&quot;channel&quot; : &quot;CC&quot;,&#xd;
        &quot;salesID&quot;: &quot;&quot;,&#xd;
        &quot;firstName&quot;: &quot;อัญชลี&quot;,&#xd;
        &quot;lastName&quot;: &quot;เถลิงเกียรติกำจร&quot;,&#xd;
        &quot;tempPolicyNo&quot; : &quot;AA449434&quot;,&#xd;
        &quot;applicationNo&quot; : &quot;&quot;,&#xd;
        &quot;tempRpNo&quot; : &quot;&quot;,&#xd;
        &quot;idNo&quot; : &quot;2223268876875&quot;,&#xd;
        &quot;illustID&quot; : &quot;&quot;,&#xd;
        &quot;startRecordDate&quot; : &quot;&quot;,&#xd;
        &quot;endRecordDate&quot; : &quot;&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8280</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">CoreDDCXRestWS/rest/searchapplication/detail/1.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;92&quot;, &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;92&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(accessTokenLoginPin)}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UNW-02 searchprogress [DDCX]" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headerData&quot;: {&#xd;
        &quot;messageId&quot;: &quot;123456789&quot;,&#xd;
        &quot;sentDateTime&quot;: &quot;2020-12-08 15:15:59&quot;,&#xd;
        &quot;responseDateTime&quot;: null&#xd;
    },&#xd;
    &quot;requestRecord&quot;: {&#xd;
        &quot;tempPolicyNo&quot;: &quot;AM090349&quot;,&#xd;
        &quot;yymm&quot;: &quot;&quot;,&#xd;
        &quot;applicationNo&quot;: &quot;&quot;&#xd;
    }&#xd;
}&#xd;
 &#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8280</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">CoreDDCXRestWS/rest/searchprogress/detail/1.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;92&quot;, &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;92&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(accessTokenLoginPin)}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UNW-03 genprebook [DDCX]" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headerData&quot;: {&#xd;
        &quot;messageId&quot;: &quot;123456789&quot;,&#xd;
        &quot;sentDateTime&quot;: &quot;2020-12-08 15:15:59&quot;,&#xd;
        &quot;responseDateTime&quot;: null&#xd;
    },&#xd;
    &quot;requestRecord&quot;: {&#xd;
        &quot;yyyy&quot;: &quot;2562&quot;,&#xd;
        &quot;bookNo&quot;: &quot;203595&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8280</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">CoreDDCXRestWS/rest/genprebook/inform/1.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;92&quot;, &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;92&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(accessTokenLoginPin)}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <com.blazemeter.jmeter.threads.arrivals.ArrivalsThreadGroup guiclass="com.blazemeter.jmeter.threads.arrivals.ArrivalsThreadGroupGui" testclass="com.blazemeter.jmeter.threads.arrivals.ArrivalsThreadGroup" testname=" Arrivals Thread Group productfilter" enabled="false">
        <elementProp name="ThreadGroup.main_controller" elementType="com.blazemeter.jmeter.control.VirtualUserController"/>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="TargetLevel">85</stringProp>
        <stringProp name="RampUp">0</stringProp>
        <stringProp name="Steps">0</stringProp>
        <stringProp name="Hold">60</stringProp>
        <stringProp name="LogFilename"></stringProp>
        <stringProp name="Iterations"></stringProp>
        <stringProp name="Unit">M</stringProp>
        <stringProp name="ConcurrencyLimit"></stringProp>
      </com.blazemeter.jmeter.threads.arrivals.ArrivalsThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="productfilter" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;body&quot;:{&#xd;
      &quot;data&quot;:{&#xd;
         &quot;customer_sex&quot;:&quot;M&quot;,&#xd;
         &quot;customer_birth&quot;:&quot;${__Random(10,25)}/0${__RandomString(1,123456789)}/2526&quot;,&#xd;
         &quot;customer_occ&quot;:1,&#xd;
         &quot;flag&quot;:&quot;ol&quot;,&#xd;
         &quot;branchRegion&quot;:&quot;&quot;,&#xd;
         &quot;branchGroup&quot;:&quot;Admin&quot;&#xd;
      }&#xd;
   },&#xd;
   &quot;headers&quot;:{&#xd;
      &quot;messageId&quot;:&quot;1c9429a3-3acd-437f-9baa-766fc0bb46fb&quot;,&#xd;
      &quot;sentDateTime&quot;:&quot;2020-11-02 08:59:48&quot;&#xd;
   }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">interfaceDFL/rest/productfilter/1.0</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">https://uat-tlproplus-api.thailife.com/interfaceDFL/rest/applicationMaster/1.0</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;92&quot;, &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;92&quot;</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(accessTokenLoginPin)}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
      <com.blazemeter.jmeter.threads.arrivals.ArrivalsThreadGroup guiclass="com.blazemeter.jmeter.threads.arrivals.ArrivalsThreadGroupGui" testclass="com.blazemeter.jmeter.threads.arrivals.ArrivalsThreadGroup" testname=" Arrivals Thread Group applicationMaster" enabled="false">
        <elementProp name="ThreadGroup.main_controller" elementType="com.blazemeter.jmeter.control.VirtualUserController"/>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="TargetLevel">35</stringProp>
        <stringProp name="RampUp">0</stringProp>
        <stringProp name="Steps">0</stringProp>
        <stringProp name="Hold">60</stringProp>
        <stringProp name="LogFilename"></stringProp>
        <stringProp name="Iterations"></stringProp>
        <stringProp name="ConcurrencyLimit"></stringProp>
        <stringProp name="Unit">M</stringProp>
      </com.blazemeter.jmeter.threads.arrivals.ArrivalsThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="applicationMaster" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;messageId&quot;: &quot;123456789191&quot;,&#xd;
        &quot;sentDateTime&quot;: &quot;11-12-2018T11:18:43.131&quot;&#xd;
    },&#xd;
    &quot;body&quot;: {&#xd;
        &quot;datas&quot;: [&#xd;
            {&#xd;
                &quot;mcaapplicationM&quot;: {&#xd;
                    &quot;applicationidDisplay&quot;: &quot;&quot;,&#xd;
                    &quot;applicationno&quot;: &quot;123456789&quot;,&#xd;
                    &quot;formtype&quot;: &quot;&quot;,&#xd;
                    &quot;applicationstatus&quot;: &quot;&quot;,&#xd;
                    &quot;tlapplicationno&quot;: &quot;&quot;,&#xd;
                    &quot;identifytype&quot;: &quot;01&quot;,&#xd;
                    &quot;identifyid&quot;: &quot;7777777777777&quot;,&#xd;
                    &quot;identifyissuedistrict&quot;: &quot;&quot;,&#xd;
                    &quot;identifyissueprovince&quot;: &quot;&quot;,&#xd;
                    &quot;identifyissuecountry&quot;: &quot;&quot;,&#xd;
                    &quot;identifyexpiredate&quot;: &quot;2020-01-01 00:00:00&quot;,&#xd;
                    &quot;title&quot;: &quot;Mr.&quot;,&#xd;
                    &quot;titledesc&quot;: &quot;&quot;,&#xd;
                    &quot;name&quot;: &quot;E${__threadNum}&quot;,&#xd;
                    &quot;lastname&quot;: &quot;Jmeter&quot;,&#xd;
                    &quot;gender&quot;: &quot;M&quot;,&#xd;
                    &quot;telno&quot;: &quot;&quot;,&#xd;
                    &quot;mobileno&quot;: &quot;&quot;,&#xd;
                    &quot;birthdate&quot;: &quot;2000-01-01 00:00:00&quot;,&#xd;
                    &quot;heigh&quot;: &quot;170&quot;,&#xd;
                    &quot;weigh&quot;: &quot;60&quot;,&#xd;
                    &quot;nationality&quot;: &quot;TH&quot;,&#xd;
                    &quot;race&quot;: &quot;TH&quot;,&#xd;
                    &quot;religion&quot;: &quot;Buddha&quot;,&#xd;
                    &quot;marital&quot;: &quot;S&quot;,&#xd;
                    &quot;spousetitle&quot;: &quot;&quot;,&#xd;
                    &quot;spousetitledesc&quot;: &quot;&quot;,&#xd;
                    &quot;spousename&quot;: &quot;&quot;,&#xd;
                    &quot;spouselastname&quot;: &quot;&quot;,&#xd;
                    &quot;spouseoccupationcd&quot;: &quot;&quot;,&#xd;
                    &quot;parentname&quot;: &quot;&quot;,&#xd;
                    &quot;parentlastname&quot;: &quot;&quot;,&#xd;
                    &quot;parenttitle&quot;: &quot;&quot;,&#xd;
                    &quot;parenttitledesc&quot;: &quot;&quot;,&#xd;
                    &quot;parentrelation&quot;: &quot;&quot;,&#xd;
                    &quot;insurerejectionflag&quot;: &quot;Y&quot;,&#xd;
                    &quot;contactaddresscd&quot;: &quot;P&quot;,&#xd;
                    &quot;otherinsuranceyn&quot;: &quot;Y&quot;,&#xd;
                    &quot;agentid&quot;: &quot;000002&quot;,&#xd;
                    &quot;regid&quot;: &quot;&quot;,&#xd;
                    &quot;updateid&quot;: &quot;&quot;,&#xd;
                    &quot;updatedate&quot;: &quot;&quot;,&#xd;
                    &quot;deletedflag&quot;: &quot;&quot;,&#xd;
                    &quot;ispreunderwritesuccess&quot;: &quot;&quot;,&#xd;
                    &quot;extitle&quot;: &quot;Mr.&quot;,&#xd;
                    &quot;extitledesc&quot;: &quot;&quot;,&#xd;
                    &quot;exname&quot;: &quot;oldname&quot;,&#xd;
                    &quot;exlastname&quot;: &quot;oldlastname&quot;,&#xd;
                    &quot;spouseoccupationdesc&quot;: &quot;&quot;,&#xd;
                    &quot;custemail&quot;: &quot;&quot;,&#xd;
                    &quot;agentemail&quot;: &quot;&quot;,&#xd;
                    &quot;submitdate&quot;: &quot;&quot;,&#xd;
                    &quot;witness1title&quot;: &quot;Mr.&quot;,&#xd;
                    &quot;witness1titledesc&quot;: &quot;&quot;,&#xd;
                    &quot;witness1fname&quot;: &quot;witness1fname&quot;,&#xd;
                    &quot;witness1lname&quot;: &quot;1&quot;,&#xd;
                    &quot;witness2title&quot;: &quot;Mr.&quot;,&#xd;
                    &quot;witness2titledesc&quot;: &quot;&quot;,&#xd;
                    &quot;witness2fname&quot;: &quot;witness2fname&quot;,&#xd;
                    &quot;witness2lname&quot;: &quot;2&quot;,&#xd;
                    &quot;rejectreason&quot;: &quot;&quot;,&#xd;
                    &quot;place&quot;: &quot;laste made at&quot;,&#xd;
                    &quot;identifynoexpire&quot;: &quot;&quot;,&#xd;
                    &quot;customerid&quot;: &quot;115&quot;,&#xd;
                    &quot;additiondetail&quot;: &quot;answer 16.&quot;,&#xd;
                    &quot;fatcaagree&quot;: &quot;&quot;,&#xd;
                    &quot;publishstatus&quot;: &quot;C&quot;,&#xd;
                    &quot;typeapp&quot;: &quot;&quot;,&#xd;
                    &quot;temprpno&quot;: &quot;&quot;,&#xd;
                    &quot;createdate&quot;: &quot;&quot;,&#xd;
                    &quot;age&quot;: &quot;&quot;,&#xd;
                    &quot;agentfullname&quot;: &quot;&quot;,&#xd;
                    &quot;quotationno&quot;: &quot;&quot;,&#xd;
                    &quot;isexpire&quot;: &quot;&quot;,&#xd;
                    &quot;smartcaseflag&quot;: &quot;&quot;,&#xd;
                    &quot;insuretitle&quot;: &quot;&quot;,&#xd;
                    &quot;insurename&quot;: &quot;&quot;,&#xd;
                    &quot;insurelastname&quot;: &quot;&quot;,&#xd;
                    &quot;saleid&quot;: &quot;&quot;,&#xd;
                    &quot;salefullname&quot;: &quot;&quot;&#xd;
                },&#xd;
                &quot;quotationM&quot;: {&#xd;
                    &quot;referenceno&quot;: &quot;K6TrpBM0OU0O1625043973045&quot;,&#xd;
                    &quot;customerid&quot;: &quot;115&quot;,&#xd;
                    &quot;agentid&quot;: &quot;000002&quot;,&#xd;
                    &quot;devicerefno&quot;: &quot;&quot;,&#xd;
                    &quot;plancode&quot;: &quot;GE21&quot;,&#xd;
                    &quot;planname&quot;: &quot;กรุงศรี เริ่มง่าย ได้ฟินๆ 16/8&quot;,&#xd;
                    &quot;mode&quot;: &quot;1&quot;,&#xd;
                    &quot;occupationtype&quot;: &quot;&quot;,&#xd;
                    &quot;insureage&quot;: &quot;21&quot;,&#xd;
                    &quot;lifesum&quot;: &quot;&quot;,&#xd;
                    &quot;lifepremium&quot;: &quot;&quot;,&#xd;
                    &quot;pname&quot;: &quot;&quot;,&#xd;
                    &quot;fname&quot;: &quot;&quot;,&#xd;
                    &quot;lname&quot;: &quot;&quot;,&#xd;
                    &quot;branch&quot;: &quot;&quot;,&#xd;
                    &quot;tax&quot;: &quot;&quot;,&#xd;
                    &quot;publishstatus&quot;: &quot;&quot;,&#xd;
                    &quot;packageno&quot;: &quot;&quot;,&#xd;
                    &quot;createdatetime&quot;: &quot;&quot;,&#xd;
                    &quot;lastmodify&quot;: &quot;&quot;,&#xd;
                    &quot;lastsync&quot;: &quot;&quot;,&#xd;
                    &quot;birthdate&quot;: &quot;&quot;,&#xd;
                    &quot;status&quot;: &quot;&quot;,&#xd;
                    &quot;pdfpath&quot;: &quot;&quot;,&#xd;
                    &quot;occgroup&quot;: &quot;&quot;,&#xd;
                    &quot;occ&quot;: &quot;&quot;,&#xd;
                    &quot;citizenid&quot;: &quot;&quot;,&#xd;
                    &quot;applicationid&quot;: &quot;&quot;,&#xd;
                    &quot;soldier&quot;: &quot;&quot;,&#xd;
                    &quot;healthcheckflag&quot;: &quot;N&quot;,&#xd;
                    &quot;totalpremium&quot;: &quot;20001&quot;,&#xd;
                    &quot;typeapp&quot;: &quot;&quot;,&#xd;
                    &quot;ppayyear&quot;: &quot;8&quot;,&#xd;
                    &quot;pendowmentyear&quot;: &quot;16&quot;,&#xd;
                    &quot;paytype&quot;: &quot;01&quot;,&#xd;
                    &quot;endowmenttype&quot;: &quot;&quot;,&#xd;
                    &quot;havetp&quot;: &quot;&quot;,&#xd;
                    &quot;kbcoverageyear&quot;: &quot;&quot;,&#xd;
                    &quot;pdflang&quot;: &quot;&quot;,&#xd;
                    &quot;alfrescoid&quot;: &quot;&quot;,&#xd;
                    &quot;disabled&quot;: &quot;&quot;,&#xd;
                    &quot;gender&quot;: &quot;M&quot;,&#xd;
                    &quot;expire&quot;: &quot;&quot;,&#xd;
                    &quot;savingsum&quot;: &quot;&quot;,&#xd;
                    &quot;savingpremium&quot;: &quot;&quot;,&#xd;
                    &quot;topuppremium&quot;: &quot;&quot;,&#xd;
                    &quot;topuptype&quot;: &quot;&quot;,&#xd;
                    &quot;msglog&quot;: &quot;&quot;,&#xd;
                    &quot;riders&quot;: &quot;&quot;,&#xd;
                    &quot;applicationstatus&quot;: &quot;&quot;,&#xd;
                    &quot;formtype&quot;: &quot;&quot;,&#xd;
                    &quot;lastupdate&quot;: &quot;&quot;,&#xd;
                    &quot;caseExpire&quot;: &quot;&quot;,&#xd;
                    &quot;applicationAmt&quot;: &quot;&quot;,&#xd;
                    &quot;quotationRiderMs&quot;: [&#xd;
                        {&#xd;
                            &quot;ridertype&quot;: &quot;TP&quot;,&#xd;
                            &quot;sum&quot;: &quot;10000&quot;,&#xd;
                            &quot;premium&quot;: &quot;0&quot;&#xd;
                        }&#xd;
                    ]&#xd;
                },&#xd;
                &quot;paymentMs&quot;: [&#xd;
                    {&#xd;
                        &quot;paymenttype&quot;: &quot;2&quot;,&#xd;
                        &quot;paymentstatus&quot;: &quot;&quot;,&#xd;
                        &quot;paymentrelation&quot;: &quot;05&quot;,&#xd;
                        &quot;paymentname&quot;: &quot;&quot;,&#xd;
                        &quot;amount&quot;: &quot;20001&quot;,&#xd;
                        &quot;paydate&quot;: &quot;2019-01-01 00:00:00&quot;,&#xd;
                        &quot;monthlypayamount&quot;: &quot;&quot;,&#xd;
                        &quot;paymentslipno&quot;: &quot;777777777&quot;,&#xd;
                        &quot;monthstartpay&quot;: &quot;&quot;,&#xd;
                        &quot;paymentperiodtype&quot;: &quot;&quot;,&#xd;
                        &quot;paymentstartdatetime&quot;: &quot;&quot;,&#xd;
                        &quot;paymentenddatetime&quot;: &quot;&quot;,&#xd;
                        &quot;regid&quot;: &quot;&quot;,&#xd;
                        &quot;regdate&quot;: &quot;&quot;,&#xd;
                        &quot;updateid&quot;: &quot;&quot;,&#xd;
                        &quot;updatedate&quot;: &quot;&quot;,&#xd;
                        &quot;paymenttitle&quot;: &quot;01&quot;,&#xd;
                        &quot;paymenttitledesc&quot;: &quot;&quot;,&#xd;
                        &quot;paymentlastname&quot;: &quot;boooo marrrr8888&quot;,&#xd;
                        &quot;creditcardno&quot;: &quot;&quot;,&#xd;
                        &quot;bankcode&quot;: &quot;&quot;,&#xd;
                        &quot;paymenttypedesc&quot;: &quot;&quot;,&#xd;
                        &quot;transactionnumber&quot;: &quot;&quot;,&#xd;
                        &quot;transactionref&quot;: &quot;&quot;,&#xd;
                        &quot;orderinfo&quot;: &quot;&quot;,&#xd;
                        &quot;taxreduceflag&quot;: &quot;Y&quot;,&#xd;
                        &quot;personidtax&quot;: &quot;taxid part5&quot;,&#xd;
                        &quot;cardtype&quot;: &quot;&quot;,&#xd;
                        &quot;ccname&quot;: &quot;&quot;,&#xd;
                        &quot;ccnumber&quot;: &quot;&quot;,&#xd;
                        &quot;vat&quot;: &quot;&quot;&#xd;
                    }&#xd;
                ],&#xd;
                &quot;applicationdetailMs&quot;: [&#xd;
                    {&#xd;
                        &quot;agentid&quot;: &quot;000002&quot;,&#xd;
                        &quot;authenstatus&quot;: &quot;&quot;,&#xd;
                        &quot;licenseno&quot;: &quot;licenseno&quot;,&#xd;
                        &quot;licenseexpire&quot;: &quot;2019-10-01 00:00:00&quot;,&#xd;
                        &quot;employeeid&quot;: &quot;88888&quot;,&#xd;
                        &quot;positionid&quot;: &quot;0&quot;,&#xd;
                        &quot;positionname&quot;: &quot;login&quot;,&#xd;
                        &quot;branchcode&quot;: &quot;01&quot;,&#xd;
                        &quot;branchname&quot;: &quot;TEST&quot;,&#xd;
                        &quot;branchregion&quot;: &quot;&quot;,&#xd;
                        &quot;titlename&quot;: &quot;Mr.&quot;,&#xd;
                        &quot;firstname&quot;: &quot;hoho&quot;,&#xd;
                        &quot;lastname&quot;: &quot;kkkkkkkkkkkkkkk&quot;,&#xd;
                        &quot;email&quot;: &quot;&quot;,&#xd;
                        &quot;tel&quot;: &quot;000000000&quot;,&#xd;
                        &quot;fax&quot;: &quot;111111111&quot;,&#xd;
                        &quot;policyreceiveflag&quot;: &quot;2&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;agentid&quot;: &quot;000004&quot;,&#xd;
                        &quot;authenstatus&quot;: &quot;&quot;,&#xd;
                        &quot;licenseno&quot;: &quot;licenseno&quot;,&#xd;
                        &quot;licenseexpire&quot;: &quot;2019-10-01 00:00:00&quot;,&#xd;
                        &quot;employeeid&quot;: &quot;99999&quot;,&#xd;
                        &quot;positionid&quot;: &quot;1&quot;,&#xd;
                        &quot;positionname&quot;: &quot;referrer&quot;,&#xd;
                        &quot;branchcode&quot;: &quot;01&quot;,&#xd;
                        &quot;branchname&quot;: &quot;TEST&quot;,&#xd;
                        &quot;branchregion&quot;: &quot;&quot;,&#xd;
                        &quot;titlename&quot;: &quot;Mr.&quot;,&#xd;
                        &quot;firstname&quot;: &quot;yuri&quot;,&#xd;
                        &quot;lastname&quot;: &quot;commmm&quot;,&#xd;
                        &quot;email&quot;: &quot;&quot;,&#xd;
                        &quot;tel&quot;: &quot;2222222222&quot;,&#xd;
                        &quot;fax&quot;: &quot;0987654321&quot;,&#xd;
                        &quot;policyreceiveflag&quot;: &quot;2&quot;&#xd;
                    }&#xd;
                ],&#xd;
                &quot;addressMs&quot;: [&#xd;
                    {&#xd;
                        &quot;addressno&quot;: &quot;888999&quot;,&#xd;
                        &quot;buildingname&quot;: &quot;home&quot;,&#xd;
                        &quot;moo&quot;: &quot;2&quot;,&#xd;
                        &quot;soi&quot;: &quot;soi&quot;,&#xd;
                        &quot;road&quot;: &quot;road&quot;,&#xd;
                        &quot;subdistrict&quot;: &quot;subdistrict&quot;,&#xd;
                        &quot;district&quot;: &quot;district&quot;,&#xd;
                        &quot;province&quot;: &quot;province&quot;,&#xd;
                        &quot;postcode&quot;: &quot;postcode&quot;,&#xd;
                        &quot;telno&quot;: &quot;telno&quot;,&#xd;
                        &quot;mobileno&quot;: &quot;mobileno&quot;,&#xd;
                        &quot;email&quot;: &quot;email@gmail.com&quot;,&#xd;
                        &quot;regid&quot;: &quot;regid&quot;,&#xd;
                        &quot;updateid&quot;: &quot;updateid&quot;,&#xd;
                        &quot;type&quot;: &quot;P&quot;,&#xd;
                        &quot;workplace&quot;: &quot;workplace&quot;,&#xd;
                        &quot;country&quot;: &quot;Thailand&quot;,&#xd;
                        &quot;persontype&quot;: &quot;GENERAL&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;addressno&quot;: &quot;888999&quot;,&#xd;
                        &quot;buildingname&quot;: &quot;home&quot;,&#xd;
                        &quot;moo&quot;: &quot;2&quot;,&#xd;
                        &quot;soi&quot;: &quot;soi&quot;,&#xd;
                        &quot;road&quot;: &quot;road&quot;,&#xd;
                        &quot;subdistrict&quot;: &quot;subdistrict&quot;,&#xd;
                        &quot;district&quot;: &quot;district&quot;,&#xd;
                        &quot;province&quot;: &quot;province&quot;,&#xd;
                        &quot;postcode&quot;: &quot;postcode&quot;,&#xd;
                        &quot;telno&quot;: &quot;telno&quot;,&#xd;
                        &quot;mobileno&quot;: &quot;mobileno&quot;,&#xd;
                        &quot;email&quot;: &quot;email@gmail.com&quot;,&#xd;
                        &quot;regid&quot;: &quot;regid&quot;,&#xd;
                        &quot;updateid&quot;: &quot;updateid&quot;,&#xd;
                        &quot;type&quot;: &quot;C&quot;,&#xd;
                        &quot;workplace&quot;: &quot;workplace&quot;,&#xd;
                        &quot;country&quot;: &quot;Thailand&quot;,&#xd;
                        &quot;persontype&quot;: &quot;GENERAL&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;addressno&quot;: &quot;888999&quot;,&#xd;
                        &quot;buildingname&quot;: &quot;home&quot;,&#xd;
                        &quot;moo&quot;: &quot;2&quot;,&#xd;
                        &quot;soi&quot;: &quot;soi&quot;,&#xd;
                        &quot;road&quot;: &quot;road&quot;,&#xd;
                        &quot;subdistrict&quot;: &quot;subdistrict&quot;,&#xd;
                        &quot;district&quot;: &quot;district&quot;,&#xd;
                        &quot;province&quot;: &quot;province&quot;,&#xd;
                        &quot;postcode&quot;: &quot;postcode&quot;,&#xd;
                        &quot;telno&quot;: &quot;telno&quot;,&#xd;
                        &quot;mobileno&quot;: &quot;mobileno&quot;,&#xd;
                        &quot;email&quot;: &quot;email@gmail.com&quot;,&#xd;
                        &quot;regid&quot;: &quot;regid&quot;,&#xd;
                        &quot;updateid&quot;: &quot;updateid&quot;,&#xd;
                        &quot;type&quot;: &quot;W&quot;,&#xd;
                        &quot;workplace&quot;: &quot;workplace&quot;,&#xd;
                        &quot;country&quot;: &quot;Thailand&quot;,&#xd;
                        &quot;persontype&quot;: &quot;GENERAL&quot;&#xd;
                    }&#xd;
                ],&#xd;
                &quot;occupationsMs&quot;: [&#xd;
                    {&#xd;
                        &quot;occupationcd&quot;: &quot;Engineer&quot;,&#xd;
                        &quot;description&quot;: &quot;dddddddddddd&quot;,&#xd;
                        &quot;position&quot;: &quot;programmer&quot;,&#xd;
                        &quot;org&quot;: &quot;&quot;,&#xd;
                        &quot;yearsalary&quot;: &quot;100000&quot;,&#xd;
                        &quot;seq&quot;: &quot;&quot;,&#xd;
                        &quot;businessdesc&quot;: &quot;computer&quot;,&#xd;
                        &quot;regid&quot;: &quot;&quot;,&#xd;
                        &quot;regdate&quot;: &quot;&quot;,&#xd;
                        &quot;updateid&quot;: &quot;&quot;,&#xd;
                        &quot;updatedate&quot;: &quot;&quot;,&#xd;
                        &quot;occupationdesc&quot;: &quot;detail&quot;,&#xd;
                        &quot;type&quot;: &quot;P&quot;,&#xd;
                        &quot;businesstype&quot;: &quot;&quot;,&#xd;
                        &quot;persontype&quot;: &quot;GENERAL&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;occupationcd&quot;: &quot;farm&quot;,&#xd;
                        &quot;description&quot;: &quot;dddddddddddd&quot;,&#xd;
                        &quot;position&quot;: &quot;head&quot;,&#xd;
                        &quot;org&quot;: &quot;00000&quot;,&#xd;
                        &quot;yearsalary&quot;: &quot;100000&quot;,&#xd;
                        &quot;seq&quot;: &quot;&quot;,&#xd;
                        &quot;businessdesc&quot;: &quot;&quot;,&#xd;
                        &quot;regid&quot;: &quot;&quot;,&#xd;
                        &quot;regdate&quot;: &quot;&quot;,&#xd;
                        &quot;updateid&quot;: &quot;&quot;,&#xd;
                        &quot;updatedate&quot;: &quot;&quot;,&#xd;
                        &quot;occupationdesc&quot;: &quot;detail&quot;,&#xd;
                        &quot;type&quot;: &quot;O&quot;,&#xd;
                        &quot;businesstype&quot;: &quot;&quot;,&#xd;
                        &quot;persontype&quot;: &quot;GENERAL&quot;&#xd;
                    }&#xd;
                ],&#xd;
                &quot;beneficiaryMs&quot;: [&#xd;
                    {&#xd;
                        &quot;identifytype&quot;: &quot;&quot;,&#xd;
                        &quot;identifyid&quot;: &quot;&quot;,&#xd;
                        &quot;name&quot;: &quot;gg&quot;,&#xd;
                        &quot;lastname&quot;: &quot;wp&quot;,&#xd;
                        &quot;title&quot;: &quot;Mr.&quot;,&#xd;
                        &quot;titledesc&quot;: &quot;gg&quot;,&#xd;
                        &quot;birthdate&quot;: &quot;1999-01-01 00:00:00&quot;,&#xd;
                        &quot;age&quot;: &quot;30&quot;,&#xd;
                        &quot;relation&quot;: &quot;พ่อ&quot;,&#xd;
                        &quot;seq&quot;: &quot;01&quot;,&#xd;
                        &quot;percentage&quot;: &quot;100&quot;,&#xd;
                        &quot;addressno&quot;: &quot;59&quot;,&#xd;
                        &quot;buildingname&quot;: &quot;home&quot;,&#xd;
                        &quot;moo&quot;: &quot;2&quot;,&#xd;
                        &quot;soi&quot;: &quot;guuu&quot;,&#xd;
                        &quot;road&quot;: &quot;ruuuu&quot;,&#xd;
                        &quot;subdistrict&quot;: &quot;wooo&quot;,&#xd;
                        &quot;district&quot;: &quot;qooo&quot;,&#xd;
                        &quot;province&quot;: &quot;toooo&quot;,&#xd;
                        &quot;postcode&quot;: &quot;10110&quot;,&#xd;
                        &quot;telno&quot;: &quot;0987654321&quot;,&#xd;
                        &quot;mobileno&quot;: &quot;0987654321&quot;,&#xd;
                        &quot;regid&quot;: &quot;&quot;,&#xd;
                        &quot;regdate&quot;: &quot;&quot;,&#xd;
                        &quot;updateid&quot;: &quot;&quot;,&#xd;
                        &quot;updatedate&quot;: &quot;&quot;,&#xd;
                        &quot;addresstype&quot;: &quot;&quot;&#xd;
                    }&#xd;
                ],&#xd;
                &quot;otherinsuranceMs&quot;: [&#xd;
                    {&#xd;
                        &quot;company&quot;: &quot;company&quot;,&#xd;
                        &quot;suminsured&quot;: &quot;700&quot;,&#xd;
                        &quot;seq&quot;: &quot;&quot;,&#xd;
                        &quot;insuredtype&quot;: &quot;&quot;,&#xd;
                        &quot;contracteffectiveflag&quot;: &quot;N&quot;,&#xd;
                        &quot;compensationdaily&quot;: &quot;600&quot;,&#xd;
                        &quot;startdate&quot;: &quot;&quot;,&#xd;
                        &quot;lifeamount&quot;: &quot;100000&quot;,&#xd;
                        &quot;accidentamount&quot;: &quot;&quot;,&#xd;
                        &quot;criticalillnessamount&quot;: &quot;&quot;,&#xd;
                        &quot;companydesc&quot;: &quot;&quot;,&#xd;
                        &quot;regid&quot;: &quot;&quot;,&#xd;
                        &quot;regdate&quot;: &quot;&quot;,&#xd;
                        &quot;updateid&quot;: &quot;&quot;,&#xd;
                        &quot;updatedate&quot;: &quot;&quot;,&#xd;
                        &quot;typeform&quot;: &quot;&quot;,&#xd;
                        &quot;companycode&quot;: &quot;&quot;,&#xd;
                        &quot;persontype&quot;: &quot;&quot;&#xd;
                    }&#xd;
                ],&#xd;
                &quot;insurancerejectionsMs&quot;: [&#xd;
                    {&#xd;
                        &quot;rejectdate&quot;: &quot;2000-01-01 00:00:00&quot;,&#xd;
                        &quot;company&quot;: &quot;company&quot;,&#xd;
                        &quot;cliam&quot;: &quot;100000&quot;,&#xd;
                        &quot;description&quot;: &quot;over cliam&quot;,&#xd;
                        &quot;regid&quot;: &quot;&quot;,&#xd;
                        &quot;regdate&quot;: &quot;&quot;,&#xd;
                        &quot;updateid&quot;: &quot;&quot;,&#xd;
                        &quot;updatedate&quot;: &quot;&quot;,&#xd;
                        &quot;companydesc&quot;: &quot;&quot;,&#xd;
                        &quot;typeform&quot;: &quot;&quot;,&#xd;
                        &quot;persontype&quot;: &quot;&quot;,&#xd;
                        &quot;companycode&quot;: &quot;&quot;&#xd;
                    }&#xd;
                ],&#xd;
                &quot;applicationAnswerMs&quot;: [&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;6&quot;,&#xd;
                        &quot;questions&quot;: &quot;10&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;7&quot;,&#xd;
                        &quot;questions&quot;: &quot;11&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;28&quot;,&#xd;
                        &quot;questions&quot;: &quot;12&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;2&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;8&quot;,&#xd;
                        &quot;questions&quot;: &quot;13&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;N&quot;,&#xd;
                        &quot;answerdesc&quot;: &quot;testttttttttt&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;9&quot;,&#xd;
                        &quot;questions&quot;: &quot;14&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;testttttttttt&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;10&quot;,&#xd;
                        &quot;questions&quot;: &quot;15&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;29&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.01&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;30&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.02&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;31&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.03&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;32&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.04&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;33&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.05&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;34&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.06&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;35&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.07&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;36&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.08&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;37&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.09&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;38&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.10&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;39&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.11&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;40&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.12&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;41&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.13&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;42&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.14&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;43&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.15&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;44&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.16&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;45&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.17&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;46&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.18&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;47&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.19&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;51&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.20&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;64&quot;,&#xd;
                        &quot;questions&quot;: &quot;17.1&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;answerdesc&quot;: &quot;3&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;65&quot;,&#xd;
                        &quot;questions&quot;: &quot;17.2&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;W&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;66&quot;,&#xd;
                        &quot;questions&quot;: &quot;17.3&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;67&quot;,&#xd;
                        &quot;questions&quot;: &quot;17.4&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;&#xd;
                    }&#xd;
                ],&#xd;
                &quot;binaryCustomerSignature&quot;: &quot;&quot;,&#xd;
                &quot;binaryAgentSignature&quot;: &quot;&quot;,&#xd;
                &quot;binaryWitness1&quot;: &quot;&quot;,&#xd;
                &quot;binaryWitness2&quot;: &quot;&quot;&#xd;
            }&#xd;
        ]&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">interfaceDFL/rest/applicationMaster/1.0</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">https://uat-tlproplus-api.thailife.com/interfaceDFL/rest/applicationMaster/1.0</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;92&quot;, &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;92&quot;</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(accessTokenLoginPin)}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="productfilter" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">4</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${duration}</stringProp>
        <stringProp name="ThreadGroup.delay">1</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="productfilter" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;body&quot;:{&#xd;
      &quot;data&quot;:{&#xd;
         &quot;customer_sex&quot;:&quot;M&quot;,&#xd;
         &quot;customer_birth&quot;:&quot;${__Random(10,25)}/0${__RandomString(1,123456789)}/252${__RandomString(1,123456789)}&quot;,&#xd;
         &quot;customer_occ&quot;:1,&#xd;
         &quot;flag&quot;:&quot;ol&quot;,&#xd;
         &quot;branchRegion&quot;:&quot;&quot;,&#xd;
         &quot;branchGroup&quot;:&quot;Admin&quot;&#xd;
      }&#xd;
   },&#xd;
   &quot;headers&quot;:{&#xd;
      &quot;messageId&quot;:&quot;1c9429a3-3acd-437f-9baa-766fc0bb46fb&quot;,&#xd;
      &quot;sentDateTime&quot;:&quot;2020-11-02 08:59:48&quot;&#xd;
   }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">interfaceDFL/rest/productfilter/1.0</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">https://uat-tlproplus-api.thailife.com/interfaceDFL/rest/applicationMaster/1.0</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;92&quot;, &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;92&quot;</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(accessTokenLoginPin)}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="false">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">2000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="applicationMaster" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">2</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${duration}</stringProp>
        <stringProp name="ThreadGroup.delay">1</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
        <stringProp name="TestPlan.comments">https://uat-tlproplus-api.thailife.com/interfaceDFL/rest/applicationMaster/1.0</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="applicationMaster" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;messageId&quot;: &quot;123456789191&quot;,&#xd;
        &quot;sentDateTime&quot;: &quot;11-12-2018T11:18:43.131&quot;&#xd;
    },&#xd;
    &quot;body&quot;: {&#xd;
        &quot;datas&quot;: [&#xd;
            {&#xd;
                &quot;mcaapplicationM&quot;: {&#xd;
                    &quot;applicationidDisplay&quot;: &quot;&quot;,&#xd;
                    &quot;applicationno&quot;: &quot;123456789&quot;,&#xd;
                    &quot;formtype&quot;: &quot;&quot;,&#xd;
                    &quot;applicationstatus&quot;: &quot;&quot;,&#xd;
                    &quot;tlapplicationno&quot;: &quot;&quot;,&#xd;
                    &quot;identifytype&quot;: &quot;01&quot;,&#xd;
                    &quot;identifyid&quot;: &quot;7777777777777&quot;,&#xd;
                    &quot;identifyissuedistrict&quot;: &quot;&quot;,&#xd;
                    &quot;identifyissueprovince&quot;: &quot;&quot;,&#xd;
                    &quot;identifyissuecountry&quot;: &quot;&quot;,&#xd;
                    &quot;identifyexpiredate&quot;: &quot;2020-01-01 00:00:00&quot;,&#xd;
                    &quot;title&quot;: &quot;Mr.&quot;,&#xd;
                    &quot;titledesc&quot;: &quot;&quot;,&#xd;
                    &quot;name&quot;: &quot;E${__threadNum}&quot;,&#xd;
                    &quot;lastname&quot;: &quot;Jmeter${__Random(1,100)}&quot;,&#xd;
                    &quot;gender&quot;: &quot;M&quot;,&#xd;
                    &quot;telno&quot;: &quot;&quot;,&#xd;
                    &quot;mobileno&quot;: &quot;&quot;,&#xd;
                    &quot;birthdate&quot;: &quot;2000-01-01 00:00:00&quot;,&#xd;
                    &quot;heigh&quot;: &quot;170&quot;,&#xd;
                    &quot;weigh&quot;: &quot;60&quot;,&#xd;
                    &quot;nationality&quot;: &quot;TH&quot;,&#xd;
                    &quot;race&quot;: &quot;TH&quot;,&#xd;
                    &quot;religion&quot;: &quot;Buddha&quot;,&#xd;
                    &quot;marital&quot;: &quot;S&quot;,&#xd;
                    &quot;spousetitle&quot;: &quot;&quot;,&#xd;
                    &quot;spousetitledesc&quot;: &quot;&quot;,&#xd;
                    &quot;spousename&quot;: &quot;&quot;,&#xd;
                    &quot;spouselastname&quot;: &quot;&quot;,&#xd;
                    &quot;spouseoccupationcd&quot;: &quot;&quot;,&#xd;
                    &quot;parentname&quot;: &quot;&quot;,&#xd;
                    &quot;parentlastname&quot;: &quot;&quot;,&#xd;
                    &quot;parenttitle&quot;: &quot;&quot;,&#xd;
                    &quot;parenttitledesc&quot;: &quot;&quot;,&#xd;
                    &quot;parentrelation&quot;: &quot;&quot;,&#xd;
                    &quot;insurerejectionflag&quot;: &quot;Y&quot;,&#xd;
                    &quot;contactaddresscd&quot;: &quot;P&quot;,&#xd;
                    &quot;otherinsuranceyn&quot;: &quot;Y&quot;,&#xd;
                    &quot;agentid&quot;: &quot;000002&quot;,&#xd;
                    &quot;regid&quot;: &quot;&quot;,&#xd;
                    &quot;updateid&quot;: &quot;&quot;,&#xd;
                    &quot;updatedate&quot;: &quot;&quot;,&#xd;
                    &quot;deletedflag&quot;: &quot;&quot;,&#xd;
                    &quot;ispreunderwritesuccess&quot;: &quot;&quot;,&#xd;
                    &quot;extitle&quot;: &quot;Mr.&quot;,&#xd;
                    &quot;extitledesc&quot;: &quot;&quot;,&#xd;
                    &quot;exname&quot;: &quot;oldname&quot;,&#xd;
                    &quot;exlastname&quot;: &quot;oldlastname&quot;,&#xd;
                    &quot;spouseoccupationdesc&quot;: &quot;&quot;,&#xd;
                    &quot;custemail&quot;: &quot;&quot;,&#xd;
                    &quot;agentemail&quot;: &quot;&quot;,&#xd;
                    &quot;submitdate&quot;: &quot;&quot;,&#xd;
                    &quot;witness1title&quot;: &quot;Mr.&quot;,&#xd;
                    &quot;witness1titledesc&quot;: &quot;&quot;,&#xd;
                    &quot;witness1fname&quot;: &quot;witness1fname&quot;,&#xd;
                    &quot;witness1lname&quot;: &quot;1&quot;,&#xd;
                    &quot;witness2title&quot;: &quot;Mr.&quot;,&#xd;
                    &quot;witness2titledesc&quot;: &quot;&quot;,&#xd;
                    &quot;witness2fname&quot;: &quot;witness2fname&quot;,&#xd;
                    &quot;witness2lname&quot;: &quot;2&quot;,&#xd;
                    &quot;rejectreason&quot;: &quot;&quot;,&#xd;
                    &quot;place&quot;: &quot;laste made at&quot;,&#xd;
                    &quot;identifynoexpire&quot;: &quot;&quot;,&#xd;
                    &quot;customerid&quot;: &quot;116&quot;,&#xd;
                    &quot;additiondetail&quot;: &quot;answer 16.&quot;,&#xd;
                    &quot;fatcaagree&quot;: &quot;&quot;,&#xd;
                    &quot;publishstatus&quot;: &quot;C&quot;,&#xd;
                    &quot;typeapp&quot;: &quot;&quot;,&#xd;
                    &quot;temprpno&quot;: &quot;&quot;,&#xd;
                    &quot;createdate&quot;: &quot;&quot;,&#xd;
                    &quot;age&quot;: &quot;&quot;,&#xd;
                    &quot;agentfullname&quot;: &quot;&quot;,&#xd;
                    &quot;quotationno&quot;: &quot;&quot;,&#xd;
                    &quot;isexpire&quot;: &quot;&quot;,&#xd;
                    &quot;smartcaseflag&quot;: &quot;&quot;,&#xd;
                    &quot;insuretitle&quot;: &quot;&quot;,&#xd;
                    &quot;insurename&quot;: &quot;&quot;,&#xd;
                    &quot;insurelastname&quot;: &quot;&quot;,&#xd;
                    &quot;saleid&quot;: &quot;&quot;,&#xd;
                    &quot;salefullname&quot;: &quot;&quot;&#xd;
                },&#xd;
                &quot;quotationM&quot;: {&#xd;
                    &quot;referenceno&quot;: &quot;K6TrpBM0OU0O1625043973045&quot;,&#xd;
                    &quot;customerid&quot;: &quot;116&quot;,&#xd;
                    &quot;agentid&quot;: &quot;000002&quot;,&#xd;
                    &quot;devicerefno&quot;: &quot;&quot;,&#xd;
                    &quot;plancode&quot;: &quot;GE21&quot;,&#xd;
                    &quot;planname&quot;: &quot;กรุงศรี เริ่มง่าย ได้ฟินๆ 16/8&quot;,&#xd;
                    &quot;mode&quot;: &quot;1&quot;,&#xd;
                    &quot;occupationtype&quot;: &quot;&quot;,&#xd;
                    &quot;insureage&quot;: &quot;21&quot;,&#xd;
                    &quot;lifesum&quot;: &quot;&quot;,&#xd;
                    &quot;lifepremium&quot;: &quot;&quot;,&#xd;
                    &quot;pname&quot;: &quot;&quot;,&#xd;
                    &quot;fname&quot;: &quot;&quot;,&#xd;
                    &quot;lname&quot;: &quot;&quot;,&#xd;
                    &quot;branch&quot;: &quot;&quot;,&#xd;
                    &quot;tax&quot;: &quot;&quot;,&#xd;
                    &quot;publishstatus&quot;: &quot;&quot;,&#xd;
                    &quot;packageno&quot;: &quot;&quot;,&#xd;
                    &quot;createdatetime&quot;: &quot;&quot;,&#xd;
                    &quot;lastmodify&quot;: &quot;&quot;,&#xd;
                    &quot;lastsync&quot;: &quot;&quot;,&#xd;
                    &quot;birthdate&quot;: &quot;&quot;,&#xd;
                    &quot;status&quot;: &quot;&quot;,&#xd;
                    &quot;pdfpath&quot;: &quot;&quot;,&#xd;
                    &quot;occgroup&quot;: &quot;&quot;,&#xd;
                    &quot;occ&quot;: &quot;&quot;,&#xd;
                    &quot;citizenid&quot;: &quot;&quot;,&#xd;
                    &quot;applicationid&quot;: &quot;&quot;,&#xd;
                    &quot;soldier&quot;: &quot;&quot;,&#xd;
                    &quot;healthcheckflag&quot;: &quot;N&quot;,&#xd;
                    &quot;totalpremium&quot;: &quot;20001&quot;,&#xd;
                    &quot;typeapp&quot;: &quot;&quot;,&#xd;
                    &quot;ppayyear&quot;: &quot;8&quot;,&#xd;
                    &quot;pendowmentyear&quot;: &quot;16&quot;,&#xd;
                    &quot;paytype&quot;: &quot;01&quot;,&#xd;
                    &quot;endowmenttype&quot;: &quot;&quot;,&#xd;
                    &quot;havetp&quot;: &quot;&quot;,&#xd;
                    &quot;kbcoverageyear&quot;: &quot;&quot;,&#xd;
                    &quot;pdflang&quot;: &quot;&quot;,&#xd;
                    &quot;alfrescoid&quot;: &quot;&quot;,&#xd;
                    &quot;disabled&quot;: &quot;&quot;,&#xd;
                    &quot;gender&quot;: &quot;M&quot;,&#xd;
                    &quot;expire&quot;: &quot;&quot;,&#xd;
                    &quot;savingsum&quot;: &quot;&quot;,&#xd;
                    &quot;savingpremium&quot;: &quot;&quot;,&#xd;
                    &quot;topuppremium&quot;: &quot;&quot;,&#xd;
                    &quot;topuptype&quot;: &quot;&quot;,&#xd;
                    &quot;msglog&quot;: &quot;&quot;,&#xd;
                    &quot;riders&quot;: &quot;&quot;,&#xd;
                    &quot;applicationstatus&quot;: &quot;&quot;,&#xd;
                    &quot;formtype&quot;: &quot;&quot;,&#xd;
                    &quot;lastupdate&quot;: &quot;&quot;,&#xd;
                    &quot;caseExpire&quot;: &quot;&quot;,&#xd;
                    &quot;applicationAmt&quot;: &quot;&quot;,&#xd;
                    &quot;quotationRiderMs&quot;: [&#xd;
                        {&#xd;
                            &quot;ridertype&quot;: &quot;TP&quot;,&#xd;
                            &quot;sum&quot;: &quot;10000&quot;,&#xd;
                            &quot;premium&quot;: &quot;0&quot;&#xd;
                        }&#xd;
                    ]&#xd;
                },&#xd;
                &quot;paymentMs&quot;: [&#xd;
                    {&#xd;
                        &quot;paymenttype&quot;: &quot;2&quot;,&#xd;
                        &quot;paymentstatus&quot;: &quot;&quot;,&#xd;
                        &quot;paymentrelation&quot;: &quot;05&quot;,&#xd;
                        &quot;paymentname&quot;: &quot;&quot;,&#xd;
                        &quot;amount&quot;: &quot;20001&quot;,&#xd;
                        &quot;paydate&quot;: &quot;2019-01-01 00:00:00&quot;,&#xd;
                        &quot;monthlypayamount&quot;: &quot;&quot;,&#xd;
                        &quot;paymentslipno&quot;: &quot;777777777&quot;,&#xd;
                        &quot;monthstartpay&quot;: &quot;&quot;,&#xd;
                        &quot;paymentperiodtype&quot;: &quot;&quot;,&#xd;
                        &quot;paymentstartdatetime&quot;: &quot;&quot;,&#xd;
                        &quot;paymentenddatetime&quot;: &quot;&quot;,&#xd;
                        &quot;regid&quot;: &quot;&quot;,&#xd;
                        &quot;regdate&quot;: &quot;&quot;,&#xd;
                        &quot;updateid&quot;: &quot;&quot;,&#xd;
                        &quot;updatedate&quot;: &quot;&quot;,&#xd;
                        &quot;paymenttitle&quot;: &quot;01&quot;,&#xd;
                        &quot;paymenttitledesc&quot;: &quot;&quot;,&#xd;
                        &quot;paymentlastname&quot;: &quot;boooo marrrr8888&quot;,&#xd;
                        &quot;creditcardno&quot;: &quot;&quot;,&#xd;
                        &quot;bankcode&quot;: &quot;&quot;,&#xd;
                        &quot;paymenttypedesc&quot;: &quot;&quot;,&#xd;
                        &quot;transactionnumber&quot;: &quot;&quot;,&#xd;
                        &quot;transactionref&quot;: &quot;&quot;,&#xd;
                        &quot;orderinfo&quot;: &quot;&quot;,&#xd;
                        &quot;taxreduceflag&quot;: &quot;Y&quot;,&#xd;
                        &quot;personidtax&quot;: &quot;taxid part5&quot;,&#xd;
                        &quot;cardtype&quot;: &quot;&quot;,&#xd;
                        &quot;ccname&quot;: &quot;&quot;,&#xd;
                        &quot;ccnumber&quot;: &quot;&quot;,&#xd;
                        &quot;vat&quot;: &quot;&quot;&#xd;
                    }&#xd;
                ],&#xd;
                &quot;applicationdetailMs&quot;: [&#xd;
                    {&#xd;
                        &quot;agentid&quot;: &quot;000002&quot;,&#xd;
                        &quot;authenstatus&quot;: &quot;&quot;,&#xd;
                        &quot;licenseno&quot;: &quot;licenseno&quot;,&#xd;
                        &quot;licenseexpire&quot;: &quot;2019-10-01 00:00:00&quot;,&#xd;
                        &quot;employeeid&quot;: &quot;88888&quot;,&#xd;
                        &quot;positionid&quot;: &quot;0&quot;,&#xd;
                        &quot;positionname&quot;: &quot;login&quot;,&#xd;
                        &quot;branchcode&quot;: &quot;01&quot;,&#xd;
                        &quot;branchname&quot;: &quot;TEST&quot;,&#xd;
                        &quot;branchregion&quot;: &quot;&quot;,&#xd;
                        &quot;titlename&quot;: &quot;Mr.&quot;,&#xd;
                        &quot;firstname&quot;: &quot;hoho&quot;,&#xd;
                        &quot;lastname&quot;: &quot;kkkkkkkkkkkkkkk&quot;,&#xd;
                        &quot;email&quot;: &quot;&quot;,&#xd;
                        &quot;tel&quot;: &quot;000000000&quot;,&#xd;
                        &quot;fax&quot;: &quot;111111111&quot;,&#xd;
                        &quot;policyreceiveflag&quot;: &quot;2&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;agentid&quot;: &quot;000004&quot;,&#xd;
                        &quot;authenstatus&quot;: &quot;&quot;,&#xd;
                        &quot;licenseno&quot;: &quot;licenseno&quot;,&#xd;
                        &quot;licenseexpire&quot;: &quot;2019-10-01 00:00:00&quot;,&#xd;
                        &quot;employeeid&quot;: &quot;99999&quot;,&#xd;
                        &quot;positionid&quot;: &quot;1&quot;,&#xd;
                        &quot;positionname&quot;: &quot;referrer&quot;,&#xd;
                        &quot;branchcode&quot;: &quot;01&quot;,&#xd;
                        &quot;branchname&quot;: &quot;TEST&quot;,&#xd;
                        &quot;branchregion&quot;: &quot;&quot;,&#xd;
                        &quot;titlename&quot;: &quot;Mr.&quot;,&#xd;
                        &quot;firstname&quot;: &quot;yuri&quot;,&#xd;
                        &quot;lastname&quot;: &quot;commmm&quot;,&#xd;
                        &quot;email&quot;: &quot;&quot;,&#xd;
                        &quot;tel&quot;: &quot;2222222222&quot;,&#xd;
                        &quot;fax&quot;: &quot;0987654321&quot;,&#xd;
                        &quot;policyreceiveflag&quot;: &quot;2&quot;&#xd;
                    }&#xd;
                ],&#xd;
                &quot;addressMs&quot;: [&#xd;
                    {&#xd;
                        &quot;addressno&quot;: &quot;888999&quot;,&#xd;
                        &quot;buildingname&quot;: &quot;home&quot;,&#xd;
                        &quot;moo&quot;: &quot;2&quot;,&#xd;
                        &quot;soi&quot;: &quot;soi&quot;,&#xd;
                        &quot;road&quot;: &quot;road&quot;,&#xd;
                        &quot;subdistrict&quot;: &quot;subdistrict&quot;,&#xd;
                        &quot;district&quot;: &quot;district&quot;,&#xd;
                        &quot;province&quot;: &quot;province&quot;,&#xd;
                        &quot;postcode&quot;: &quot;postcode&quot;,&#xd;
                        &quot;telno&quot;: &quot;telno&quot;,&#xd;
                        &quot;mobileno&quot;: &quot;mobileno&quot;,&#xd;
                        &quot;email&quot;: &quot;email@gmail.com&quot;,&#xd;
                        &quot;regid&quot;: &quot;regid&quot;,&#xd;
                        &quot;updateid&quot;: &quot;updateid&quot;,&#xd;
                        &quot;type&quot;: &quot;P&quot;,&#xd;
                        &quot;workplace&quot;: &quot;workplace&quot;,&#xd;
                        &quot;country&quot;: &quot;Thailand&quot;,&#xd;
                        &quot;persontype&quot;: &quot;GENERAL&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;addressno&quot;: &quot;888999&quot;,&#xd;
                        &quot;buildingname&quot;: &quot;home&quot;,&#xd;
                        &quot;moo&quot;: &quot;2&quot;,&#xd;
                        &quot;soi&quot;: &quot;soi&quot;,&#xd;
                        &quot;road&quot;: &quot;road&quot;,&#xd;
                        &quot;subdistrict&quot;: &quot;subdistrict&quot;,&#xd;
                        &quot;district&quot;: &quot;district&quot;,&#xd;
                        &quot;province&quot;: &quot;province&quot;,&#xd;
                        &quot;postcode&quot;: &quot;postcode&quot;,&#xd;
                        &quot;telno&quot;: &quot;telno&quot;,&#xd;
                        &quot;mobileno&quot;: &quot;mobileno&quot;,&#xd;
                        &quot;email&quot;: &quot;email@gmail.com&quot;,&#xd;
                        &quot;regid&quot;: &quot;regid&quot;,&#xd;
                        &quot;updateid&quot;: &quot;updateid&quot;,&#xd;
                        &quot;type&quot;: &quot;C&quot;,&#xd;
                        &quot;workplace&quot;: &quot;workplace&quot;,&#xd;
                        &quot;country&quot;: &quot;Thailand&quot;,&#xd;
                        &quot;persontype&quot;: &quot;GENERAL&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;addressno&quot;: &quot;888999&quot;,&#xd;
                        &quot;buildingname&quot;: &quot;home&quot;,&#xd;
                        &quot;moo&quot;: &quot;2&quot;,&#xd;
                        &quot;soi&quot;: &quot;soi&quot;,&#xd;
                        &quot;road&quot;: &quot;road&quot;,&#xd;
                        &quot;subdistrict&quot;: &quot;subdistrict&quot;,&#xd;
                        &quot;district&quot;: &quot;district&quot;,&#xd;
                        &quot;province&quot;: &quot;province&quot;,&#xd;
                        &quot;postcode&quot;: &quot;postcode&quot;,&#xd;
                        &quot;telno&quot;: &quot;telno&quot;,&#xd;
                        &quot;mobileno&quot;: &quot;mobileno&quot;,&#xd;
                        &quot;email&quot;: &quot;email@gmail.com&quot;,&#xd;
                        &quot;regid&quot;: &quot;regid&quot;,&#xd;
                        &quot;updateid&quot;: &quot;updateid&quot;,&#xd;
                        &quot;type&quot;: &quot;W&quot;,&#xd;
                        &quot;workplace&quot;: &quot;workplace&quot;,&#xd;
                        &quot;country&quot;: &quot;Thailand&quot;,&#xd;
                        &quot;persontype&quot;: &quot;GENERAL&quot;&#xd;
                    }&#xd;
                ],&#xd;
                &quot;occupationsMs&quot;: [&#xd;
                    {&#xd;
                        &quot;occupationcd&quot;: &quot;Engineer&quot;,&#xd;
                        &quot;description&quot;: &quot;dddddddddddd&quot;,&#xd;
                        &quot;position&quot;: &quot;programmer&quot;,&#xd;
                        &quot;org&quot;: &quot;&quot;,&#xd;
                        &quot;yearsalary&quot;: &quot;100000&quot;,&#xd;
                        &quot;seq&quot;: &quot;&quot;,&#xd;
                        &quot;businessdesc&quot;: &quot;computer&quot;,&#xd;
                        &quot;regid&quot;: &quot;&quot;,&#xd;
                        &quot;regdate&quot;: &quot;&quot;,&#xd;
                        &quot;updateid&quot;: &quot;&quot;,&#xd;
                        &quot;updatedate&quot;: &quot;&quot;,&#xd;
                        &quot;occupationdesc&quot;: &quot;detail&quot;,&#xd;
                        &quot;type&quot;: &quot;P&quot;,&#xd;
                        &quot;businesstype&quot;: &quot;&quot;,&#xd;
                        &quot;persontype&quot;: &quot;GENERAL&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;occupationcd&quot;: &quot;farm&quot;,&#xd;
                        &quot;description&quot;: &quot;dddddddddddd&quot;,&#xd;
                        &quot;position&quot;: &quot;head&quot;,&#xd;
                        &quot;org&quot;: &quot;00000&quot;,&#xd;
                        &quot;yearsalary&quot;: &quot;100000&quot;,&#xd;
                        &quot;seq&quot;: &quot;&quot;,&#xd;
                        &quot;businessdesc&quot;: &quot;&quot;,&#xd;
                        &quot;regid&quot;: &quot;&quot;,&#xd;
                        &quot;regdate&quot;: &quot;&quot;,&#xd;
                        &quot;updateid&quot;: &quot;&quot;,&#xd;
                        &quot;updatedate&quot;: &quot;&quot;,&#xd;
                        &quot;occupationdesc&quot;: &quot;detail&quot;,&#xd;
                        &quot;type&quot;: &quot;O&quot;,&#xd;
                        &quot;businesstype&quot;: &quot;&quot;,&#xd;
                        &quot;persontype&quot;: &quot;GENERAL&quot;&#xd;
                    }&#xd;
                ],&#xd;
                &quot;beneficiaryMs&quot;: [&#xd;
                    {&#xd;
                        &quot;identifytype&quot;: &quot;&quot;,&#xd;
                        &quot;identifyid&quot;: &quot;&quot;,&#xd;
                        &quot;name&quot;: &quot;gg&quot;,&#xd;
                        &quot;lastname&quot;: &quot;wp&quot;,&#xd;
                        &quot;title&quot;: &quot;Mr.&quot;,&#xd;
                        &quot;titledesc&quot;: &quot;gg&quot;,&#xd;
                        &quot;birthdate&quot;: &quot;1999-01-01 00:00:00&quot;,&#xd;
                        &quot;age&quot;: &quot;30&quot;,&#xd;
                        &quot;relation&quot;: &quot;พ่อ&quot;,&#xd;
                        &quot;seq&quot;: &quot;01&quot;,&#xd;
                        &quot;percentage&quot;: &quot;100&quot;,&#xd;
                        &quot;addressno&quot;: &quot;59&quot;,&#xd;
                        &quot;buildingname&quot;: &quot;home&quot;,&#xd;
                        &quot;moo&quot;: &quot;2&quot;,&#xd;
                        &quot;soi&quot;: &quot;guuu&quot;,&#xd;
                        &quot;road&quot;: &quot;ruuuu&quot;,&#xd;
                        &quot;subdistrict&quot;: &quot;wooo&quot;,&#xd;
                        &quot;district&quot;: &quot;qooo&quot;,&#xd;
                        &quot;province&quot;: &quot;toooo&quot;,&#xd;
                        &quot;postcode&quot;: &quot;10110&quot;,&#xd;
                        &quot;telno&quot;: &quot;0987654321&quot;,&#xd;
                        &quot;mobileno&quot;: &quot;0987654321&quot;,&#xd;
                        &quot;regid&quot;: &quot;&quot;,&#xd;
                        &quot;regdate&quot;: &quot;&quot;,&#xd;
                        &quot;updateid&quot;: &quot;&quot;,&#xd;
                        &quot;updatedate&quot;: &quot;&quot;,&#xd;
                        &quot;addresstype&quot;: &quot;&quot;&#xd;
                    }&#xd;
                ],&#xd;
                &quot;otherinsuranceMs&quot;: [&#xd;
                    {&#xd;
                        &quot;company&quot;: &quot;company&quot;,&#xd;
                        &quot;suminsured&quot;: &quot;700&quot;,&#xd;
                        &quot;seq&quot;: &quot;&quot;,&#xd;
                        &quot;insuredtype&quot;: &quot;&quot;,&#xd;
                        &quot;contracteffectiveflag&quot;: &quot;N&quot;,&#xd;
                        &quot;compensationdaily&quot;: &quot;600&quot;,&#xd;
                        &quot;startdate&quot;: &quot;&quot;,&#xd;
                        &quot;lifeamount&quot;: &quot;100000&quot;,&#xd;
                        &quot;accidentamount&quot;: &quot;&quot;,&#xd;
                        &quot;criticalillnessamount&quot;: &quot;&quot;,&#xd;
                        &quot;companydesc&quot;: &quot;&quot;,&#xd;
                        &quot;regid&quot;: &quot;&quot;,&#xd;
                        &quot;regdate&quot;: &quot;&quot;,&#xd;
                        &quot;updateid&quot;: &quot;&quot;,&#xd;
                        &quot;updatedate&quot;: &quot;&quot;,&#xd;
                        &quot;typeform&quot;: &quot;&quot;,&#xd;
                        &quot;companycode&quot;: &quot;&quot;,&#xd;
                        &quot;persontype&quot;: &quot;&quot;&#xd;
                    }&#xd;
                ],&#xd;
                &quot;insurancerejectionsMs&quot;: [&#xd;
                    {&#xd;
                        &quot;rejectdate&quot;: &quot;2000-01-01 00:00:00&quot;,&#xd;
                        &quot;company&quot;: &quot;company&quot;,&#xd;
                        &quot;cliam&quot;: &quot;100000&quot;,&#xd;
                        &quot;description&quot;: &quot;over cliam&quot;,&#xd;
                        &quot;regid&quot;: &quot;&quot;,&#xd;
                        &quot;regdate&quot;: &quot;&quot;,&#xd;
                        &quot;updateid&quot;: &quot;&quot;,&#xd;
                        &quot;updatedate&quot;: &quot;&quot;,&#xd;
                        &quot;companydesc&quot;: &quot;&quot;,&#xd;
                        &quot;typeform&quot;: &quot;&quot;,&#xd;
                        &quot;persontype&quot;: &quot;&quot;,&#xd;
                        &quot;companycode&quot;: &quot;&quot;&#xd;
                    }&#xd;
                ],&#xd;
                &quot;applicationAnswerMs&quot;: [&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;6&quot;,&#xd;
                        &quot;questions&quot;: &quot;10&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;7&quot;,&#xd;
                        &quot;questions&quot;: &quot;11&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;28&quot;,&#xd;
                        &quot;questions&quot;: &quot;12&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;2&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;8&quot;,&#xd;
                        &quot;questions&quot;: &quot;13&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;N&quot;,&#xd;
                        &quot;answerdesc&quot;: &quot;testttttttttt&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;9&quot;,&#xd;
                        &quot;questions&quot;: &quot;14&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;testttttttttt&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;10&quot;,&#xd;
                        &quot;questions&quot;: &quot;15&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;29&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.01&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;30&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.02&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;31&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.03&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;32&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.04&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;33&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.05&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;34&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.06&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;35&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.07&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;36&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.08&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;37&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.09&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;38&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.10&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;39&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.11&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;40&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.12&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;41&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.13&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;42&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.14&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;43&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.15&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;44&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.16&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;45&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.17&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;46&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.18&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;47&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.19&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;51&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.20&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;64&quot;,&#xd;
                        &quot;questions&quot;: &quot;17.1&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;answerdesc&quot;: &quot;3&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;65&quot;,&#xd;
                        &quot;questions&quot;: &quot;17.2&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;W&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;66&quot;,&#xd;
                        &quot;questions&quot;: &quot;17.3&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;67&quot;,&#xd;
                        &quot;questions&quot;: &quot;17.4&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;&#xd;
                    }&#xd;
                ],&#xd;
                &quot;binaryCustomerSignature&quot;: &quot;&quot;,&#xd;
                &quot;binaryAgentSignature&quot;: &quot;&quot;,&#xd;
                &quot;binaryWitness1&quot;: &quot;&quot;,&#xd;
                &quot;binaryWitness2&quot;: &quot;&quot;&#xd;
            }&#xd;
        ]&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">interfaceDFL/rest/applicationMaster/1.0</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">https://uat-tlproplus-api.thailife.com/interfaceDFL/rest/applicationMaster/1.0</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;92&quot;, &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;92&quot;</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(accessTokenLoginPin)}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="applicationMaster" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;messageId&quot;: &quot;123456789191&quot;,&#xd;
        &quot;sentDateTime&quot;: &quot;11-12-2018T11:18:43.131&quot;&#xd;
    },&#xd;
    &quot;body&quot;: {&#xd;
        &quot;datas&quot;: [&#xd;
            {&#xd;
                &quot;mcaapplicationM&quot;: {&#xd;
                    &quot;applicationidDisplay&quot;: &quot;&quot;,&#xd;
                    &quot;applicationno&quot;: &quot;123456789&quot;,&#xd;
                    &quot;formtype&quot;: &quot;&quot;,&#xd;
                    &quot;applicationstatus&quot;: &quot;&quot;,&#xd;
                    &quot;tlapplicationno&quot;: &quot;&quot;,&#xd;
                    &quot;identifytype&quot;: &quot;01&quot;,&#xd;
                    &quot;identifyid&quot;: &quot;7777777777777&quot;,&#xd;
                    &quot;identifyissuedistrict&quot;: &quot;&quot;,&#xd;
                    &quot;identifyissueprovince&quot;: &quot;&quot;,&#xd;
                    &quot;identifyissuecountry&quot;: &quot;&quot;,&#xd;
                    &quot;identifyexpiredate&quot;: &quot;2020-01-01 00:00:00&quot;,&#xd;
                    &quot;title&quot;: &quot;Mr.&quot;,&#xd;
                    &quot;titledesc&quot;: &quot;&quot;,&#xd;
                    &quot;name&quot;: &quot;E${__threadNum}&quot;,&#xd;
                    &quot;lastname&quot;: &quot;Jmeter${__Random(1,100)}&quot;,&#xd;
                    &quot;gender&quot;: &quot;M&quot;,&#xd;
                    &quot;telno&quot;: &quot;&quot;,&#xd;
                    &quot;mobileno&quot;: &quot;&quot;,&#xd;
                    &quot;birthdate&quot;: &quot;2000-01-01 00:00:00&quot;,&#xd;
                    &quot;heigh&quot;: &quot;170&quot;,&#xd;
                    &quot;weigh&quot;: &quot;60&quot;,&#xd;
                    &quot;nationality&quot;: &quot;TH&quot;,&#xd;
                    &quot;race&quot;: &quot;TH&quot;,&#xd;
                    &quot;religion&quot;: &quot;Buddha&quot;,&#xd;
                    &quot;marital&quot;: &quot;S&quot;,&#xd;
                    &quot;spousetitle&quot;: &quot;&quot;,&#xd;
                    &quot;spousetitledesc&quot;: &quot;&quot;,&#xd;
                    &quot;spousename&quot;: &quot;&quot;,&#xd;
                    &quot;spouselastname&quot;: &quot;&quot;,&#xd;
                    &quot;spouseoccupationcd&quot;: &quot;&quot;,&#xd;
                    &quot;parentname&quot;: &quot;&quot;,&#xd;
                    &quot;parentlastname&quot;: &quot;&quot;,&#xd;
                    &quot;parenttitle&quot;: &quot;&quot;,&#xd;
                    &quot;parenttitledesc&quot;: &quot;&quot;,&#xd;
                    &quot;parentrelation&quot;: &quot;&quot;,&#xd;
                    &quot;insurerejectionflag&quot;: &quot;Y&quot;,&#xd;
                    &quot;contactaddresscd&quot;: &quot;P&quot;,&#xd;
                    &quot;otherinsuranceyn&quot;: &quot;Y&quot;,&#xd;
                    &quot;agentid&quot;: &quot;${__Random(0,9)}000${__Random(0,9)}${__Random(0,9)}&quot;,&#xd;
                    &quot;regid&quot;: &quot;&quot;,&#xd;
                    &quot;updateid&quot;: &quot;&quot;,&#xd;
                    &quot;updatedate&quot;: &quot;&quot;,&#xd;
                    &quot;deletedflag&quot;: &quot;&quot;,&#xd;
                    &quot;ispreunderwritesuccess&quot;: &quot;&quot;,&#xd;
                    &quot;extitle&quot;: &quot;Mr.&quot;,&#xd;
                    &quot;extitledesc&quot;: &quot;&quot;,&#xd;
                    &quot;exname&quot;: &quot;oldname&quot;,&#xd;
                    &quot;exlastname&quot;: &quot;oldlastname&quot;,&#xd;
                    &quot;spouseoccupationdesc&quot;: &quot;&quot;,&#xd;
                    &quot;custemail&quot;: &quot;&quot;,&#xd;
                    &quot;agentemail&quot;: &quot;&quot;,&#xd;
                    &quot;submitdate&quot;: &quot;&quot;,&#xd;
                    &quot;witness1title&quot;: &quot;Mr.&quot;,&#xd;
                    &quot;witness1titledesc&quot;: &quot;&quot;,&#xd;
                    &quot;witness1fname&quot;: &quot;witness1fname&quot;,&#xd;
                    &quot;witness1lname&quot;: &quot;1&quot;,&#xd;
                    &quot;witness2title&quot;: &quot;Mr.&quot;,&#xd;
                    &quot;witness2titledesc&quot;: &quot;&quot;,&#xd;
                    &quot;witness2fname&quot;: &quot;witness2fname&quot;,&#xd;
                    &quot;witness2lname&quot;: &quot;2&quot;,&#xd;
                    &quot;rejectreason&quot;: &quot;&quot;,&#xd;
                    &quot;place&quot;: &quot;laste made at&quot;,&#xd;
                    &quot;identifynoexpire&quot;: &quot;&quot;,&#xd;
                    &quot;customerid&quot;: &quot;116&quot;,&#xd;
                    &quot;additiondetail&quot;: &quot;answer 16.&quot;,&#xd;
                    &quot;fatcaagree&quot;: &quot;&quot;,&#xd;
                    &quot;publishstatus&quot;: &quot;C&quot;,&#xd;
                    &quot;typeapp&quot;: &quot;&quot;,&#xd;
                    &quot;temprpno&quot;: &quot;&quot;,&#xd;
                    &quot;createdate&quot;: &quot;&quot;,&#xd;
                    &quot;age&quot;: &quot;&quot;,&#xd;
                    &quot;agentfullname&quot;: &quot;&quot;,&#xd;
                    &quot;quotationno&quot;: &quot;&quot;,&#xd;
                    &quot;isexpire&quot;: &quot;&quot;,&#xd;
                    &quot;smartcaseflag&quot;: &quot;&quot;,&#xd;
                    &quot;insuretitle&quot;: &quot;&quot;,&#xd;
                    &quot;insurename&quot;: &quot;&quot;,&#xd;
                    &quot;insurelastname&quot;: &quot;&quot;,&#xd;
                    &quot;saleid&quot;: &quot;&quot;,&#xd;
                    &quot;salefullname&quot;: &quot;&quot;&#xd;
                },&#xd;
                &quot;quotationM&quot;: {&#xd;
                    &quot;referenceno&quot;: &quot;K6TrpBM0OU0O1625043973045&quot;,&#xd;
                    &quot;customerid&quot;: &quot;116&quot;,&#xd;
                    &quot;agentid&quot;: &quot;000002&quot;,&#xd;
                    &quot;devicerefno&quot;: &quot;&quot;,&#xd;
                    &quot;plancode&quot;: &quot;GE21&quot;,&#xd;
                    &quot;planname&quot;: &quot;กรุงศรี เริ่มง่าย ได้ฟินๆ 16/8&quot;,&#xd;
                    &quot;mode&quot;: &quot;1&quot;,&#xd;
                    &quot;occupationtype&quot;: &quot;&quot;,&#xd;
                    &quot;insureage&quot;: &quot;21&quot;,&#xd;
                    &quot;lifesum&quot;: &quot;&quot;,&#xd;
                    &quot;lifepremium&quot;: &quot;&quot;,&#xd;
                    &quot;pname&quot;: &quot;&quot;,&#xd;
                    &quot;fname&quot;: &quot;&quot;,&#xd;
                    &quot;lname&quot;: &quot;&quot;,&#xd;
                    &quot;branch&quot;: &quot;&quot;,&#xd;
                    &quot;tax&quot;: &quot;&quot;,&#xd;
                    &quot;publishstatus&quot;: &quot;&quot;,&#xd;
                    &quot;packageno&quot;: &quot;&quot;,&#xd;
                    &quot;createdatetime&quot;: &quot;&quot;,&#xd;
                    &quot;lastmodify&quot;: &quot;&quot;,&#xd;
                    &quot;lastsync&quot;: &quot;&quot;,&#xd;
                    &quot;birthdate&quot;: &quot;&quot;,&#xd;
                    &quot;status&quot;: &quot;&quot;,&#xd;
                    &quot;pdfpath&quot;: &quot;&quot;,&#xd;
                    &quot;occgroup&quot;: &quot;&quot;,&#xd;
                    &quot;occ&quot;: &quot;&quot;,&#xd;
                    &quot;citizenid&quot;: &quot;&quot;,&#xd;
                    &quot;applicationid&quot;: &quot;&quot;,&#xd;
                    &quot;soldier&quot;: &quot;&quot;,&#xd;
                    &quot;healthcheckflag&quot;: &quot;N&quot;,&#xd;
                    &quot;totalpremium&quot;: &quot;20001&quot;,&#xd;
                    &quot;typeapp&quot;: &quot;&quot;,&#xd;
                    &quot;ppayyear&quot;: &quot;8&quot;,&#xd;
                    &quot;pendowmentyear&quot;: &quot;16&quot;,&#xd;
                    &quot;paytype&quot;: &quot;01&quot;,&#xd;
                    &quot;endowmenttype&quot;: &quot;&quot;,&#xd;
                    &quot;havetp&quot;: &quot;&quot;,&#xd;
                    &quot;kbcoverageyear&quot;: &quot;&quot;,&#xd;
                    &quot;pdflang&quot;: &quot;&quot;,&#xd;
                    &quot;alfrescoid&quot;: &quot;&quot;,&#xd;
                    &quot;disabled&quot;: &quot;&quot;,&#xd;
                    &quot;gender&quot;: &quot;M&quot;,&#xd;
                    &quot;expire&quot;: &quot;&quot;,&#xd;
                    &quot;savingsum&quot;: &quot;&quot;,&#xd;
                    &quot;savingpremium&quot;: &quot;&quot;,&#xd;
                    &quot;topuppremium&quot;: &quot;&quot;,&#xd;
                    &quot;topuptype&quot;: &quot;&quot;,&#xd;
                    &quot;msglog&quot;: &quot;&quot;,&#xd;
                    &quot;riders&quot;: &quot;&quot;,&#xd;
                    &quot;applicationstatus&quot;: &quot;&quot;,&#xd;
                    &quot;formtype&quot;: &quot;&quot;,&#xd;
                    &quot;lastupdate&quot;: &quot;&quot;,&#xd;
                    &quot;caseExpire&quot;: &quot;&quot;,&#xd;
                    &quot;applicationAmt&quot;: &quot;&quot;,&#xd;
                    &quot;quotationRiderMs&quot;: [&#xd;
                        {&#xd;
                            &quot;ridertype&quot;: &quot;TP&quot;,&#xd;
                            &quot;sum&quot;: &quot;10000&quot;,&#xd;
                            &quot;premium&quot;: &quot;0&quot;&#xd;
                        }&#xd;
                    ]&#xd;
                },&#xd;
                &quot;paymentMs&quot;: [&#xd;
                    {&#xd;
                        &quot;paymenttype&quot;: &quot;2&quot;,&#xd;
                        &quot;paymentstatus&quot;: &quot;&quot;,&#xd;
                        &quot;paymentrelation&quot;: &quot;05&quot;,&#xd;
                        &quot;paymentname&quot;: &quot;&quot;,&#xd;
                        &quot;amount&quot;: &quot;20001&quot;,&#xd;
                        &quot;paydate&quot;: &quot;2019-01-01 00:00:00&quot;,&#xd;
                        &quot;monthlypayamount&quot;: &quot;&quot;,&#xd;
                        &quot;paymentslipno&quot;: &quot;777777777&quot;,&#xd;
                        &quot;monthstartpay&quot;: &quot;&quot;,&#xd;
                        &quot;paymentperiodtype&quot;: &quot;&quot;,&#xd;
                        &quot;paymentstartdatetime&quot;: &quot;&quot;,&#xd;
                        &quot;paymentenddatetime&quot;: &quot;&quot;,&#xd;
                        &quot;regid&quot;: &quot;&quot;,&#xd;
                        &quot;regdate&quot;: &quot;&quot;,&#xd;
                        &quot;updateid&quot;: &quot;&quot;,&#xd;
                        &quot;updatedate&quot;: &quot;&quot;,&#xd;
                        &quot;paymenttitle&quot;: &quot;01&quot;,&#xd;
                        &quot;paymenttitledesc&quot;: &quot;&quot;,&#xd;
                        &quot;paymentlastname&quot;: &quot;boooo marrrr8888&quot;,&#xd;
                        &quot;creditcardno&quot;: &quot;&quot;,&#xd;
                        &quot;bankcode&quot;: &quot;&quot;,&#xd;
                        &quot;paymenttypedesc&quot;: &quot;&quot;,&#xd;
                        &quot;transactionnumber&quot;: &quot;&quot;,&#xd;
                        &quot;transactionref&quot;: &quot;&quot;,&#xd;
                        &quot;orderinfo&quot;: &quot;&quot;,&#xd;
                        &quot;taxreduceflag&quot;: &quot;Y&quot;,&#xd;
                        &quot;personidtax&quot;: &quot;taxid part5&quot;,&#xd;
                        &quot;cardtype&quot;: &quot;&quot;,&#xd;
                        &quot;ccname&quot;: &quot;&quot;,&#xd;
                        &quot;ccnumber&quot;: &quot;&quot;,&#xd;
                        &quot;vat&quot;: &quot;&quot;&#xd;
                    }&#xd;
                ],&#xd;
                &quot;applicationdetailMs&quot;: [&#xd;
                    {&#xd;
                        &quot;agentid&quot;: &quot;000002&quot;,&#xd;
                        &quot;authenstatus&quot;: &quot;&quot;,&#xd;
                        &quot;licenseno&quot;: &quot;licenseno&quot;,&#xd;
                        &quot;licenseexpire&quot;: &quot;2019-10-01 00:00:00&quot;,&#xd;
                        &quot;employeeid&quot;: &quot;88888&quot;,&#xd;
                        &quot;positionid&quot;: &quot;0&quot;,&#xd;
                        &quot;positionname&quot;: &quot;login&quot;,&#xd;
                        &quot;branchcode&quot;: &quot;01&quot;,&#xd;
                        &quot;branchname&quot;: &quot;TEST&quot;,&#xd;
                        &quot;branchregion&quot;: &quot;&quot;,&#xd;
                        &quot;titlename&quot;: &quot;Mr.&quot;,&#xd;
                        &quot;firstname&quot;: &quot;hoho&quot;,&#xd;
                        &quot;lastname&quot;: &quot;kkkkkkkkkkkkkkk&quot;,&#xd;
                        &quot;email&quot;: &quot;&quot;,&#xd;
                        &quot;tel&quot;: &quot;000000000&quot;,&#xd;
                        &quot;fax&quot;: &quot;111111111&quot;,&#xd;
                        &quot;policyreceiveflag&quot;: &quot;2&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;agentid&quot;: &quot;000004&quot;,&#xd;
                        &quot;authenstatus&quot;: &quot;&quot;,&#xd;
                        &quot;licenseno&quot;: &quot;licenseno&quot;,&#xd;
                        &quot;licenseexpire&quot;: &quot;2019-10-01 00:00:00&quot;,&#xd;
                        &quot;employeeid&quot;: &quot;99999&quot;,&#xd;
                        &quot;positionid&quot;: &quot;1&quot;,&#xd;
                        &quot;positionname&quot;: &quot;referrer&quot;,&#xd;
                        &quot;branchcode&quot;: &quot;01&quot;,&#xd;
                        &quot;branchname&quot;: &quot;TEST&quot;,&#xd;
                        &quot;branchregion&quot;: &quot;&quot;,&#xd;
                        &quot;titlename&quot;: &quot;Mr.&quot;,&#xd;
                        &quot;firstname&quot;: &quot;yuri&quot;,&#xd;
                        &quot;lastname&quot;: &quot;commmm&quot;,&#xd;
                        &quot;email&quot;: &quot;&quot;,&#xd;
                        &quot;tel&quot;: &quot;2222222222&quot;,&#xd;
                        &quot;fax&quot;: &quot;0987654321&quot;,&#xd;
                        &quot;policyreceiveflag&quot;: &quot;2&quot;&#xd;
                    }&#xd;
                ],&#xd;
                &quot;addressMs&quot;: [&#xd;
                    {&#xd;
                        &quot;addressno&quot;: &quot;888999&quot;,&#xd;
                        &quot;buildingname&quot;: &quot;home&quot;,&#xd;
                        &quot;moo&quot;: &quot;2&quot;,&#xd;
                        &quot;soi&quot;: &quot;soi&quot;,&#xd;
                        &quot;road&quot;: &quot;road&quot;,&#xd;
                        &quot;subdistrict&quot;: &quot;subdistrict&quot;,&#xd;
                        &quot;district&quot;: &quot;district&quot;,&#xd;
                        &quot;province&quot;: &quot;province&quot;,&#xd;
                        &quot;postcode&quot;: &quot;postcode&quot;,&#xd;
                        &quot;telno&quot;: &quot;telno&quot;,&#xd;
                        &quot;mobileno&quot;: &quot;mobileno&quot;,&#xd;
                        &quot;email&quot;: &quot;email@gmail.com&quot;,&#xd;
                        &quot;regid&quot;: &quot;regid&quot;,&#xd;
                        &quot;updateid&quot;: &quot;updateid&quot;,&#xd;
                        &quot;type&quot;: &quot;P&quot;,&#xd;
                        &quot;workplace&quot;: &quot;workplace&quot;,&#xd;
                        &quot;country&quot;: &quot;Thailand&quot;,&#xd;
                        &quot;persontype&quot;: &quot;GENERAL&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;addressno&quot;: &quot;888999&quot;,&#xd;
                        &quot;buildingname&quot;: &quot;home&quot;,&#xd;
                        &quot;moo&quot;: &quot;2&quot;,&#xd;
                        &quot;soi&quot;: &quot;soi&quot;,&#xd;
                        &quot;road&quot;: &quot;road&quot;,&#xd;
                        &quot;subdistrict&quot;: &quot;subdistrict&quot;,&#xd;
                        &quot;district&quot;: &quot;district&quot;,&#xd;
                        &quot;province&quot;: &quot;province&quot;,&#xd;
                        &quot;postcode&quot;: &quot;postcode&quot;,&#xd;
                        &quot;telno&quot;: &quot;telno&quot;,&#xd;
                        &quot;mobileno&quot;: &quot;mobileno&quot;,&#xd;
                        &quot;email&quot;: &quot;email@gmail.com&quot;,&#xd;
                        &quot;regid&quot;: &quot;regid&quot;,&#xd;
                        &quot;updateid&quot;: &quot;updateid&quot;,&#xd;
                        &quot;type&quot;: &quot;C&quot;,&#xd;
                        &quot;workplace&quot;: &quot;workplace&quot;,&#xd;
                        &quot;country&quot;: &quot;Thailand&quot;,&#xd;
                        &quot;persontype&quot;: &quot;GENERAL&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;addressno&quot;: &quot;888999&quot;,&#xd;
                        &quot;buildingname&quot;: &quot;home&quot;,&#xd;
                        &quot;moo&quot;: &quot;2&quot;,&#xd;
                        &quot;soi&quot;: &quot;soi&quot;,&#xd;
                        &quot;road&quot;: &quot;road&quot;,&#xd;
                        &quot;subdistrict&quot;: &quot;subdistrict&quot;,&#xd;
                        &quot;district&quot;: &quot;district&quot;,&#xd;
                        &quot;province&quot;: &quot;province&quot;,&#xd;
                        &quot;postcode&quot;: &quot;postcode&quot;,&#xd;
                        &quot;telno&quot;: &quot;telno&quot;,&#xd;
                        &quot;mobileno&quot;: &quot;mobileno&quot;,&#xd;
                        &quot;email&quot;: &quot;email@gmail.com&quot;,&#xd;
                        &quot;regid&quot;: &quot;regid&quot;,&#xd;
                        &quot;updateid&quot;: &quot;updateid&quot;,&#xd;
                        &quot;type&quot;: &quot;W&quot;,&#xd;
                        &quot;workplace&quot;: &quot;workplace&quot;,&#xd;
                        &quot;country&quot;: &quot;Thailand&quot;,&#xd;
                        &quot;persontype&quot;: &quot;GENERAL&quot;&#xd;
                    }&#xd;
                ],&#xd;
                &quot;occupationsMs&quot;: [&#xd;
                    {&#xd;
                        &quot;occupationcd&quot;: &quot;Engineer&quot;,&#xd;
                        &quot;description&quot;: &quot;dddddddddddd&quot;,&#xd;
                        &quot;position&quot;: &quot;programmer&quot;,&#xd;
                        &quot;org&quot;: &quot;&quot;,&#xd;
                        &quot;yearsalary&quot;: &quot;100000&quot;,&#xd;
                        &quot;seq&quot;: &quot;&quot;,&#xd;
                        &quot;businessdesc&quot;: &quot;computer&quot;,&#xd;
                        &quot;regid&quot;: &quot;&quot;,&#xd;
                        &quot;regdate&quot;: &quot;&quot;,&#xd;
                        &quot;updateid&quot;: &quot;&quot;,&#xd;
                        &quot;updatedate&quot;: &quot;&quot;,&#xd;
                        &quot;occupationdesc&quot;: &quot;detail&quot;,&#xd;
                        &quot;type&quot;: &quot;P&quot;,&#xd;
                        &quot;businesstype&quot;: &quot;&quot;,&#xd;
                        &quot;persontype&quot;: &quot;GENERAL&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;occupationcd&quot;: &quot;farm&quot;,&#xd;
                        &quot;description&quot;: &quot;dddddddddddd&quot;,&#xd;
                        &quot;position&quot;: &quot;head&quot;,&#xd;
                        &quot;org&quot;: &quot;00000&quot;,&#xd;
                        &quot;yearsalary&quot;: &quot;100000&quot;,&#xd;
                        &quot;seq&quot;: &quot;&quot;,&#xd;
                        &quot;businessdesc&quot;: &quot;&quot;,&#xd;
                        &quot;regid&quot;: &quot;&quot;,&#xd;
                        &quot;regdate&quot;: &quot;&quot;,&#xd;
                        &quot;updateid&quot;: &quot;&quot;,&#xd;
                        &quot;updatedate&quot;: &quot;&quot;,&#xd;
                        &quot;occupationdesc&quot;: &quot;detail&quot;,&#xd;
                        &quot;type&quot;: &quot;O&quot;,&#xd;
                        &quot;businesstype&quot;: &quot;&quot;,&#xd;
                        &quot;persontype&quot;: &quot;GENERAL&quot;&#xd;
                    }&#xd;
                ],&#xd;
                &quot;beneficiaryMs&quot;: [&#xd;
                    {&#xd;
                        &quot;identifytype&quot;: &quot;&quot;,&#xd;
                        &quot;identifyid&quot;: &quot;&quot;,&#xd;
                        &quot;name&quot;: &quot;gg&quot;,&#xd;
                        &quot;lastname&quot;: &quot;wp&quot;,&#xd;
                        &quot;title&quot;: &quot;Mr.&quot;,&#xd;
                        &quot;titledesc&quot;: &quot;gg&quot;,&#xd;
                        &quot;birthdate&quot;: &quot;1999-01-01 00:00:00&quot;,&#xd;
                        &quot;age&quot;: &quot;30&quot;,&#xd;
                        &quot;relation&quot;: &quot;พ่อ&quot;,&#xd;
                        &quot;seq&quot;: &quot;01&quot;,&#xd;
                        &quot;percentage&quot;: &quot;100&quot;,&#xd;
                        &quot;addressno&quot;: &quot;59&quot;,&#xd;
                        &quot;buildingname&quot;: &quot;home&quot;,&#xd;
                        &quot;moo&quot;: &quot;2&quot;,&#xd;
                        &quot;soi&quot;: &quot;guuu&quot;,&#xd;
                        &quot;road&quot;: &quot;ruuuu&quot;,&#xd;
                        &quot;subdistrict&quot;: &quot;wooo&quot;,&#xd;
                        &quot;district&quot;: &quot;qooo&quot;,&#xd;
                        &quot;province&quot;: &quot;toooo&quot;,&#xd;
                        &quot;postcode&quot;: &quot;10110&quot;,&#xd;
                        &quot;telno&quot;: &quot;0987654321&quot;,&#xd;
                        &quot;mobileno&quot;: &quot;0987654321&quot;,&#xd;
                        &quot;regid&quot;: &quot;&quot;,&#xd;
                        &quot;regdate&quot;: &quot;&quot;,&#xd;
                        &quot;updateid&quot;: &quot;&quot;,&#xd;
                        &quot;updatedate&quot;: &quot;&quot;,&#xd;
                        &quot;addresstype&quot;: &quot;&quot;&#xd;
                    }&#xd;
                ],&#xd;
                &quot;otherinsuranceMs&quot;: [&#xd;
                    {&#xd;
                        &quot;company&quot;: &quot;company&quot;,&#xd;
                        &quot;suminsured&quot;: &quot;700&quot;,&#xd;
                        &quot;seq&quot;: &quot;&quot;,&#xd;
                        &quot;insuredtype&quot;: &quot;&quot;,&#xd;
                        &quot;contracteffectiveflag&quot;: &quot;N&quot;,&#xd;
                        &quot;compensationdaily&quot;: &quot;600&quot;,&#xd;
                        &quot;startdate&quot;: &quot;&quot;,&#xd;
                        &quot;lifeamount&quot;: &quot;100000&quot;,&#xd;
                        &quot;accidentamount&quot;: &quot;&quot;,&#xd;
                        &quot;criticalillnessamount&quot;: &quot;&quot;,&#xd;
                        &quot;companydesc&quot;: &quot;&quot;,&#xd;
                        &quot;regid&quot;: &quot;&quot;,&#xd;
                        &quot;regdate&quot;: &quot;&quot;,&#xd;
                        &quot;updateid&quot;: &quot;&quot;,&#xd;
                        &quot;updatedate&quot;: &quot;&quot;,&#xd;
                        &quot;typeform&quot;: &quot;&quot;,&#xd;
                        &quot;companycode&quot;: &quot;&quot;,&#xd;
                        &quot;persontype&quot;: &quot;&quot;&#xd;
                    }&#xd;
                ],&#xd;
                &quot;insurancerejectionsMs&quot;: [&#xd;
                    {&#xd;
                        &quot;rejectdate&quot;: &quot;2000-01-01 00:00:00&quot;,&#xd;
                        &quot;company&quot;: &quot;company&quot;,&#xd;
                        &quot;cliam&quot;: &quot;100000&quot;,&#xd;
                        &quot;description&quot;: &quot;over cliam&quot;,&#xd;
                        &quot;regid&quot;: &quot;&quot;,&#xd;
                        &quot;regdate&quot;: &quot;&quot;,&#xd;
                        &quot;updateid&quot;: &quot;&quot;,&#xd;
                        &quot;updatedate&quot;: &quot;&quot;,&#xd;
                        &quot;companydesc&quot;: &quot;&quot;,&#xd;
                        &quot;typeform&quot;: &quot;&quot;,&#xd;
                        &quot;persontype&quot;: &quot;&quot;,&#xd;
                        &quot;companycode&quot;: &quot;&quot;&#xd;
                    }&#xd;
                ],&#xd;
                &quot;applicationAnswerMs&quot;: [&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;6&quot;,&#xd;
                        &quot;questions&quot;: &quot;10&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;7&quot;,&#xd;
                        &quot;questions&quot;: &quot;11&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;28&quot;,&#xd;
                        &quot;questions&quot;: &quot;12&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;2&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;8&quot;,&#xd;
                        &quot;questions&quot;: &quot;13&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;N&quot;,&#xd;
                        &quot;answerdesc&quot;: &quot;testttttttttt&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;9&quot;,&#xd;
                        &quot;questions&quot;: &quot;14&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;testttttttttt&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;10&quot;,&#xd;
                        &quot;questions&quot;: &quot;15&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;29&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.01&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;30&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.02&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;31&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.03&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;32&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.04&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;33&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.05&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;34&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.06&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;35&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.07&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;36&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.08&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;37&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.09&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;38&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.10&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;39&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.11&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;40&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.12&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;41&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.13&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;42&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.14&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;43&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.15&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;44&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.16&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;45&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.17&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;46&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.18&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;47&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.19&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;51&quot;,&#xd;
                        &quot;questions&quot;: &quot;15.20&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;text1&quot;: &quot;test1&quot;,&#xd;
                        &quot;text2&quot;: &quot;test2&quot;,&#xd;
                        &quot;datetime1&quot;: &quot;2019-01-01 00:00:00&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;64&quot;,&#xd;
                        &quot;questions&quot;: &quot;17.1&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;,&#xd;
                        &quot;answerdesc&quot;: &quot;3&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;65&quot;,&#xd;
                        &quot;questions&quot;: &quot;17.2&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;W&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;66&quot;,&#xd;
                        &quot;questions&quot;: &quot;17.3&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;questionid&quot;: &quot;67&quot;,&#xd;
                        &quot;questions&quot;: &quot;17.4&quot;,&#xd;
                        &quot;answeryn&quot;: &quot;Y&quot;&#xd;
                    }&#xd;
                ],&#xd;
                &quot;binaryCustomerSignature&quot;: &quot;&quot;,&#xd;
                &quot;binaryAgentSignature&quot;: &quot;&quot;,&#xd;
                &quot;binaryWitness1&quot;: &quot;&quot;,&#xd;
                &quot;binaryWitness2&quot;: &quot;&quot;&#xd;
            }&#xd;
        ]&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">interfaceDFL/rest/applicationMaster/1.0</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">https://uat-tlproplus-api.thailife.com/interfaceDFL/rest/applicationMaster/1.0</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;92&quot;, &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;92&quot;</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(accessTokenLoginPin)}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <boolProp name="useGroupName">true</boolProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.TransactionsPerSecondGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Transactions per Second" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.HitsPerSecondGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Hits per Second" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseTimesOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Times Over Time" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <longProp name="interval_grouping">500</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <BeanShellListener guiclass="TestBeanGUI" testclass="BeanShellListener" testname="BeanShell Listener" enabled="false">
        <stringProp name="filename"></stringProp>
        <stringProp name="parameters"></stringProp>
        <boolProp name="resetInterpreter">false</boolProp>
        <stringProp name="script">// Static elements or calculations
String USERNAME = &quot;${receiptNo}&quot;;
String RPN = &quot;${policyNo}&quot;;


FileWriter fstream = new FileWriter(&quot;C:/Loadtest/DDCX/ile.csv&quot;,true);
fstream.write(USERNAME +&quot;,&quot;+ RPN + &quot;\n&quot;);
fstream.close();

</stringProp>
      </BeanShellListener>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
