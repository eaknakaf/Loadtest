<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="RpNo" elementType="Argument">
            <stringProp name="Argument.name">RpNo</stringProp>
            <stringProp name="Argument.value">${__P(RpNo,700000349052)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Dura" elementType="Argument">
            <stringProp name="Argument.name">Dura</stringProp>
            <stringProp name="Argument.value">${__P(Dura,3600)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Get bearer" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1544105700000</longProp>
        <longProp name="ThreadGroup.end_time">1544147100000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">100</stringProp>
        <stringProp name="ThreadGroup.delay">5</stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get_token" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="grant_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">grant_type</stringProp>
                  <stringProp name="Argument.value">client_credentials</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client_secret" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">client_secret</stringProp>
                  <stringProp name="Argument.value">YB68rZljM9c32x2r88G9yrAvaGEa</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                  <stringProp name="Argument.value">1jFxkCVTWdrDyOqch4P4pTLlhuwa</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8243</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">Beareriddd</stringProp>
              <stringProp name="RegexExtractor.regex">{&quot;access_token&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">${__setProperty(Bearerid,${Beareriddd})}
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="Origin" elementType="Header">
            <stringProp name="Header.name">Origin</stringProp>
            <stringProp name="Header.value">https://pre-tlprompt.thailife.com</stringProp>
          </elementProp>
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36</stringProp>
          </elementProp>
          <elementProp name="Accept-Language" elementType="Header">
            <stringProp name="Header.name">Accept-Language</stringProp>
            <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
          </elementProp>
          <elementProp name="Accept-Encoding" elementType="Header">
            <stringProp name="Header.name">Accept-Encoding</stringProp>
            <stringProp name="Header.value">gzip, deflate, br</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config IDCard" enabled="true">
        <stringProp name="filename">/home/tleuser/Loadtest/TLproplus/Data/agent/IDCard.csv</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">IDCard</stringProp>
        <boolProp name="ignoreFirstLine">true</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config personID" enabled="true">
        <stringProp name="filename">/home/tleuser/Loadtest/TLproplus/Data/personID.csv</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">personID</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config Agen_pass" enabled="true">
        <stringProp name="filename">/home/tleuser/Loadtest/TLproplus/Data/agent/Agent_Pass.csv</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">AgentID,Password</stringProp>
        <boolProp name="ignoreFirstLine">true</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">pre-tlprompt-api.thailife.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">pre-tlprompt-api.thailife.com</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_2" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_2</stringProp>
            <stringProp name="Argument.value">da.thailife.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_3" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_3</stringProp>
            <stringProp name="Argument.value">pre-tlproplus.thailife.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Origin_1" elementType="Argument">
            <stringProp name="Argument.name">Origin_1</stringProp>
            <stringProp name="Argument.value">https://pre-tlproplus.thailife.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Referer_1" elementType="Argument">
            <stringProp name="Argument.name">Referer_1</stringProp>
            <stringProp name="Argument.value">https://pre-tlproplus.thailife.com/</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sentDateTime" elementType="Argument">
            <stringProp name="Argument.name">sentDateTime</stringProp>
            <stringProp name="Argument.value">09-08-2019T14:17:55</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">28-08-2018T10:15:17</stringProp>
          </elementProp>
          <elementProp name="startrpNo" elementType="Argument">
            <stringProp name="Argument.name">startrpNo</stringProp>
            <stringProp name="Argument.value">${RpNo}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="duration" elementType="Argument">
            <stringProp name="Argument.name">duration</stringProp>
            <stringProp name="Argument.value">72000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="delay" elementType="Argument">
            <stringProp name="Argument.name">delay</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="uID" elementType="Argument">
            <stringProp name="Argument.name">uID</stringProp>
            <stringProp name="Argument.value">${__UUID}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Foldername" elementType="Argument">
            <stringProp name="Argument.name">Foldername</stringProp>
            <stringProp name="Argument.value">Test${__threadNum}UploadA${__counter(TRUE,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.clearEachIteration">true</boolProp>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">true</boolProp>
        <intProp name="maxSize">500000</intProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="1_1) Login with Branch users 150 requests" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">75</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1544105700000</longProp>
        <longProp name="ThreadGroup.end_time">1544147100000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="Referer" elementType="Header">
              <stringProp name="Header.name">Referer</stringProp>
              <stringProp name="Header.value">https://pre-tlproplus.thailife.com/</stringProp>
            </elementProp>
            <elementProp name="User-Agent" elementType="Header">
              <stringProp name="Header.name">User-Agent</stringProp>
              <stringProp name="Header.value">Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2311.90 Safari/537.36</stringProp>
            </elementProp>
            <elementProp name="Accept-Language" elementType="Header">
              <stringProp name="Header.name">Accept-Language</stringProp>
              <stringProp name="Header.value">th,en-US;q=0.8,en;q=0.6</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Basic MWpGeGtDVlRXZHJEeU9xY2g0UDRwVExsaHV3YTpZQjY4clpsak05YzMyeDJyODhHOXlyQXZhR0Vh</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="delimiter"></stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">/home/tleuser/Loadtest/TLproplus/Data/branch/uid.txt</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">uid</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="filename">/home/tleuser/Loadtest/TLproplus/Data/branch/resulttoken.txt</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">token</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="delimiter"></stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="BASE_URL_1" elementType="Argument">
              <stringProp name="Argument.name">BASE_URL_1</stringProp>
              <stringProp name="Argument.value">pre-tlprompt-api.thailife.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">pre-tlprompt-api.thailife.com</stringProp>
            </elementProp>
            <elementProp name="BASE_URL_2" elementType="Argument">
              <stringProp name="Argument.name">BASE_URL_2</stringProp>
              <stringProp name="Argument.value">pre-tlproplus.thailife.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">pre-tlprompt.thailife.com</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <boolProp name="HTTPSampler.image_parser">true</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
          <collectionProp name="DNSCacheManager.servers"/>
          <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
          <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
        </DNSCacheManager>
        <hashTree/>
        <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
          <collectionProp name="AuthManager.auth_list"/>
          <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
        </AuthManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1_1_Login with Branch users 150 requests" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">password</stringProp>
                <stringProp name="Argument.value">Thailife20181</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="grant_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
                <stringProp name="Argument.value">password</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">${uid}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port">8243</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://pre-tlproplus.thailife.com</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://pre-tlproplus.thailife.com/</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
          <collectionProp name="Asserion.test_strings">
            <stringProp name="1155674821">Authentication failed</stringProp>
          </collectionProp>
          <stringProp name="Assertion.custom_message"></stringProp>
          <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
          <boolProp name="Assertion.assume_success">false</boolProp>
          <intProp name="Assertion.test_type">6</intProp>
        </ResponseAssertion>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results_Login with Branch users" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>false</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>false</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <url>true</url>
            </value>
          </objProp>
          <stringProp name="filename">~/Assertion Results_Login with Branch users.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="false">
          <intProp name="ThroughputController.style">0</intProp>
          <boolProp name="ThroughputController.perThread">true</boolProp>
          <intProp name="ThroughputController.maxThroughput">10</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>20.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="1_2) Login with Agent users 850 requests " enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">425</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1544105700000</longProp>
        <longProp name="ThreadGroup.end_time">1544147100000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">10800</stringProp>
        <stringProp name="ThreadGroup.delay">5</stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
        <hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
              <stringProp name="RandomTimer.range">100</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1_2) Login with Agent users 850 requests " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;username&quot;:&quot;${AgentID}&quot;,&quot;password&quot;:&quot;${__MD5(${Password})}&quot;,&quot;applicationCode&quot;:&quot;tlprompt&quot;,&quot;uID&quot;:&quot;${__UUID}&quot;}&#xd;
&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port">8243</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/tlproplus/authen/1.0</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1218516807">errorCode&quot;:&quot;0&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${Origin_1}</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(Bearerid)}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://uat-tlproplus.thailife.com/</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results_Login with Agent users" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>false</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>false</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <url>true</url>
            </value>
          </objProp>
          <stringProp name="filename">~/Assertion Results_Login with Agent users.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="2_1) Chart Service30" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">30</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">10800</stringProp>
        <stringProp name="ThreadGroup.delay">5</stringProp>
        <longProp name="ThreadGroup.start_time">1545119308000</longProp>
        <longProp name="ThreadGroup.end_time">1545119308000</longProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
        <hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
              <stringProp name="RandomTimer.range">100</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Group1" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Group1" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;body&quot;:{&quot;action&quot;:&quot;SELECT&quot;,&quot;datas&quot;:[],&quot;searchkey&quot;:&quot;GROUP1&quot;,&quot;agentid&quot;:&quot;${personID}&quot;,&quot;searchmode&quot;:&quot;GROUP01&quot;},&quot;headers&quot;:{&quot;sentDateTime&quot;:&quot;09-10-2019T13:33:45&quot;,&quot;uID&quot;:&quot;${uID}&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8243</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">TLPromptBackendWs/1.0/rest/chart/chartService/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://pre-tlproplus.thailife.com</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(Bearerid)}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Group2" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Group2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;body&quot;:{&quot;action&quot;:&quot;SELECT&quot;,&quot;datas&quot;:[],&quot;searchkey&quot;:&quot;GROUP2&quot;,&quot;agentid&quot;:&quot;${personID}&quot;,&quot;searchmode&quot;:&quot;GROUP02&quot;},&quot;headers&quot;:{&quot;sentDateTime&quot;:&quot;09-10-2019T13:33:45&quot;,&quot;uID&quot;:&quot;${uID}&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8243</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">TLPromptBackendWs/1.0/rest/chart/chartService/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://pre-tlproplus.thailife.com</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(Bearerid)}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Group3" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Group3" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;body&quot;:{&quot;action&quot;:&quot;SELECT&quot;,&quot;datas&quot;:[],&quot;searchkey&quot;:&quot;GROUP3&quot;,&quot;agentid&quot;:&quot;${personID}&quot;,&quot;searchmode&quot;:&quot;GROUP03&quot;},&quot;headers&quot;:{&quot;sentDateTime&quot;:&quot;09-10-2019T13:33:45&quot;,&quot;uID&quot;:&quot;${uID}&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8243</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">TLPromptBackendWs/1.0/rest/chart/chartService/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://pre-tlproplus.thailife.com</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(Bearerid)}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Group4" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Group4" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;body&quot;:{&quot;action&quot;:&quot;SELECT&quot;,&quot;datas&quot;:[],&quot;searchkey&quot;:&quot;GROUP4&quot;,&quot;agentid&quot;:&quot;${personID}&quot;,&quot;searchmode&quot;:&quot;GROUP04&quot;},&quot;headers&quot;:{&quot;sentDateTime&quot;:&quot;09-10-2019T13:33:45&quot;,&quot;uID&quot;:&quot;${uID}&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8243</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">TLPromptBackendWs/1.0/rest/chart/chartService/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://pre-tlproplus.thailife.com</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(Bearerid)}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Chart Service 1000 requests 1" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">100</stringProp>
          </ConstantTimer>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2_1_Chart Service 1000 requests_" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;body&quot;:{&quot;action&quot;:&quot;SELECT&quot;,&quot;datas&quot;:[],&quot;searchkey&quot;:&quot;GROUP2&quot;,&quot;agentid&quot;:&quot;${personID}&quot;,&quot;searchmode&quot;:&quot;GROUP02&quot;},&quot;headers&quot;:{&quot;sentDateTime&quot;:&quot;${sentDateTime}&quot;,&quot;uID&quot;:&quot;${uID}&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8243</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">TLPromptBackendWs/1.0/rest/chart/chartService/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://pre-tlproplus.thailife.com</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(Bearerid)}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="3_1) ค้นหาใบเสนอขาย 50" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">50</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1544105700000</longProp>
        <longProp name="ThreadGroup.end_time">1544147100000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">10800</stringProp>
        <stringProp name="ThreadGroup.delay">10</stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
        <hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">4000</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
              <stringProp name="RandomTimer.range">100</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="ผู้มุ่งหวัง--&gt;ดูรายชื่อทั้งหมด" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3_1) ค้นหาใบเสนอขาย 200 requests" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;body&quot;:{&quot;action&quot;:&quot;SELECT&quot;,&quot;datas&quot;:[{&quot;customerType&quot;:&quot;&quot;}],&quot;keyvalue&quot;:&quot;&quot;,&quot;agentid&quot;:&quot;${personID}&quot;,&quot;searchmode&quot;:&quot;&quot;},&quot;headers&quot;:{&quot;sentDateTime&quot;:&quot;${sentDateTime}&quot;,&quot;uID&quot;:&quot;${uID}&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8243</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">TLPromptBackendWs/1.0/rest/prospect/prospectService</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${Aut}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://sit-tlproplus.thailife.com/</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(Bearerid)}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${Referer_1}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>true</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>true</responseData>
                <samplerData>true</samplerData>
                <xml>true</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>true</responseHeaders>
                <requestHeaders>true</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <fileName>true</fileName>
                <hostname>true</hostname>
                <threadCounts>true</threadCounts>
                <sampleCount>true</sampleCount>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
            <stringProp name="RandomTimer.range">1000</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="3_2) ค้นหาใบคำขอ 50" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">50</stringProp>
        <stringProp name="ThreadGroup.ramp_time">2</stringProp>
        <longProp name="ThreadGroup.start_time">1544105700000</longProp>
        <longProp name="ThreadGroup.end_time">1544147100000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">10800</stringProp>
        <stringProp name="ThreadGroup.delay">10</stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
        <hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">4000</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
              <stringProp name="RandomTimer.range">100</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="ใบคำขอ--&gt;ดูรายชื่อทั้งหมด" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3_2) ค้นหาใบคำขอ 200 requests" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;body&quot;:{&quot;action&quot;:&quot;SELECT&quot;,&quot;datas&quot;:[{}],&quot;keyvalue&quot;:&quot;&quot;,&quot;agentid&quot;:&quot;${personID}&quot;,&quot;pagingMode&quot;:true,&quot;orderBy&quot;:&quot;&quot;,&quot;orderType&quot;:&quot;&quot;,&quot;pageNo&quot;:1,&quot;pageSize&quot;:20,&quot;filterBy&quot;:&quot;00&quot;},&quot;headers&quot;:{&quot;sentDateTime&quot;:&quot;${sentDateTime}&quot;,&quot;uID&quot;:&quot;${uID}&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8243</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">TLPromptBackendWs/1.0/rest/quotation/quotationService/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${Aut}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://sit-tlproplus.thailife.com/</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(Bearerid)}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${Referer_1}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
            <boolProp name="ResultCollector.error_logging">true</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>true</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>true</responseData>
                <samplerData>true</samplerData>
                <xml>true</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>true</responseHeaders>
                <requestHeaders>true</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <fileName>true</fileName>
                <threadCounts>true</threadCounts>
                <sampleCount>true</sampleCount>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename">~/R2.jtl</stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
            <stringProp name="RandomTimer.range">1000</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="3_3) ค้นหาโรงพยาบาลเครือข่าย 20" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">20</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1544105700000</longProp>
        <longProp name="ThreadGroup.end_time">1544147100000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">10800</stringProp>
        <stringProp name="ThreadGroup.delay">5</stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
        <hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">4000</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
              <stringProp name="RandomTimer.range">100</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="3_3) ค้นหาโรงพยาบาลเครือข่าย 40 requests (Search all)" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3_3) ค้นหาโรงพยาบาลเครือข่าย 40 requests (Search all)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;headers&quot;:{&quot;uID&quot;:&quot;${uID}&quot;,&quot;sentDateTime&quot;:&quot;${sentDateTime}&quot;},&quot;body&quot;:{&quot;action&quot;:&quot;SELECT&quot;,&quot;datas&quot;:[{&quot;province&quot;:&quot;&quot;,&quot;address&quot;:&quot;&quot;}]}}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8243</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">TLPromptBackendWs/1.0/rest/hospital/hospitalService</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${Aut}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://sit-tlproplus.thailife.com/</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(Bearerid)}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${Referer_1}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
            <boolProp name="ResultCollector.error_logging">true</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="3_4) คำนวณเบี้ย_tlplanService 30" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">30</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1544105700000</longProp>
        <longProp name="ThreadGroup.end_time">1544147100000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">10800</stringProp>
        <stringProp name="ThreadGroup.delay">5</stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
        <hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">4000</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
              <stringProp name="RandomTimer.range">100</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="tlplanService" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="tlplanService" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;body&quot;:{&quot;action&quot;:&quot;SELECT&quot;,&quot;agentid&quot;:&quot;${personID}&quot;},&quot;headers&quot;:{&quot;sentDateTime&quot;:&quot;09-10-2019T13:44:28&quot;,&quot;uID&quot;:&quot;${uID}&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8243</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">TLPromptBackendWs/1.0/rest/tlplan/tlplanService</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(Bearerid)}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${Referer_1}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="3_5_1) ดูใบเสนอขาย OL _ 100" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">100</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">10800</stringProp>
        <stringProp name="ThreadGroup.delay">5</stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
        <hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">4000</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
              <stringProp name="RandomTimer.range">100</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Old_3_5_1_ดูใบเสนอขาย OL" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;body&quot;:{&quot;datas&quot;:[{&quot;agentFullName&quot;:&quot;à¸ªà¸¸à¸£à¸¨à¸±à¸&#x81;à¸&#x94;à¸´à¹&#x8c; à¸&#x9b;à¸£à¸°à¹&#x82;à¸¢à¸&#x8a;à¸&#x99;à¹&#x8c;à¸§à¸&#x99;à¸´à¸&#x8a;&quot;,&quot;agentBranch&quot;:&quot;à¸&#x96;à¸&#x99;à¸&#x99;à¸&#x9e;à¸£à¸°à¸£à¸²à¸¡ 9&quot;,&quot;quotationno&quot;:&quot;&quot;,&quot;customerid&quot;:&quot;&quot;,&quot;quotationStatus&quot;:&quot;&quot;,&quot;flag&quot;:&quot;1&quot;,&quot;planCode&quot;:&quot;EQ&quot;,&quot;planName&quot;:&quot;à¸&#x98;à¸&#x99;à¸&#x97;à¸£à¸±à¸&#x9e;à¸¢à¹&#x8c;20/20 [à¸¡à¸µà¹&#x80;à¸&#x87;à¸´à¸&#x99;à¸&#x9b;à¸±à¸&#x99;à¸&#x9c;à¸¥]&quot;,&quot;preName&quot;:&quot;à¸&#x99;à¸²à¸¢&quot;,&quot;firstName&quot;:&quot;à¸£à¸±à¸&#x87;à¸ªà¸£à¸£à¸&#x84;à¹&#x8c;&quot;,&quot;lastName&quot;:&quot;à¸ªà¸¸à¸&#x82;à¸¡à¸²&quot;,&quot;sex&quot;:&quot;M&quot;,&quot;age&quot;:&quot;35&quot;,&quot;endowYear&quot;:&quot;20&quot;,&quot;payYear&quot;:&quot;20&quot;,&quot;lifeBenfit&quot;:&quot;1500000&quot;,&quot;lifePremium&quot;:&quot;76650&quot;,&quot;premiumPerYear&quot;:&quot;76650&quot;,&quot;premiumOfTaxDeduction&quot;:&quot;100000&quot;,&quot;date&quot;:&quot;25620516&quot;,&quot;mode&quot;:&quot;1&quot;,&quot;plan&quot;:&quot;-1&quot;,&quot;timesend&quot;:&quot;&quot;,&quot;occupation&quot;:&quot;1&quot;,&quot;referenceNo&quot;:&quot;&quot;,&quot;listRaider&quot;:[{&quot;raiderCode&quot;:&quot;AC01&quot;,&quot;raiderDetail&quot;:&quot;1600000&quot;,&quot;raiderPremium&quot;:&quot;000003200&quot;},{&quot;raiderCode&quot;:&quot;TAC01&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;000000000&quot;},{&quot;raiderCode&quot;:&quot;KG1&quot;,&quot;raiderDetail&quot;:&quot;1600000&quot;,&quot;raiderPremium&quot;:&quot;000001200&quot;},{&quot;raiderCode&quot;:&quot;TKG1&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;000000000&quot;},{&quot;raiderCode&quot;:&quot;AC02&quot;,&quot;raiderDetail&quot;:&quot;1400000&quot;,&quot;raiderPremium&quot;:&quot;000007000&quot;},{&quot;raiderCode&quot;:&quot;TAC02&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;000000000&quot;},{&quot;raiderCode&quot;:&quot;KG2&quot;,&quot;raiderDetail&quot;:&quot;1400000&quot;,&quot;raiderPremium&quot;:&quot;000001750&quot;},{&quot;raiderCode&quot;:&quot;TKG2&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;000000000&quot;},{&quot;raiderCode&quot;:&quot;AP9&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;000000000&quot;},{&quot;raiderCode&quot;:&quot;AC03&quot;,&quot;raiderDetail&quot;:&quot;100000&quot;,&quot;raiderPremium&quot;:&quot;000002520&quot;},{&quot;raiderCode&quot;:&quot;SR2&quot;,&quot;raiderDetail&quot;:&quot;1&quot;,&quot;raiderPremium&quot;:&quot;325&quot;},{&quot;raiderCode&quot;:&quot;JP&quot;,&quot;raiderDetail&quot;:&quot;1500000&quot;,&quot;raiderPremium&quot;:&quot;10125&quot;},{&quot;raiderCode&quot;:&quot;RP&quot;,&quot;raiderDetail&quot;:&quot;2500&quot;,&quot;raiderPremium&quot;:&quot;000006250&quot;},{&quot;raiderCode&quot;:&quot;TRP&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;00000000&quot;},{&quot;raiderCode&quot;:&quot;HCG&quot;,&quot;raiderDetail&quot;:&quot;500&quot;,&quot;raiderPremium&quot;:&quot;000001375&quot;},{&quot;raiderCode&quot;:&quot;D09&quot;,&quot;raiderDetail&quot;:&quot;1000000&quot;,&quot;raiderPremium&quot;:&quot;000010740&quot;},{&quot;raiderCode&quot;:&quot;D10&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;00000000&quot;},{&quot;raiderCode&quot;:&quot;D03&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;000000000&quot;},{&quot;raiderCode&quot;:&quot;H&quot;,&quot;raiderDetail&quot;:&quot;1000&quot;,&quot;raiderPremium&quot;:&quot;003446&quot;},{&quot;raiderCode&quot;:&quot;J0&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;00000000&quot;},{&quot;raiderCode&quot;:&quot;TH&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;00000000&quot;},{&quot;raiderCode&quot;:&quot;G&quot;,&quot;raiderDetail&quot;:&quot;2000&quot;,&quot;raiderPremium&quot;:&quot;011600&quot;},{&quot;raiderCode&quot;:&quot;VP&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;00000000&quot;},{&quot;raiderCode&quot;:&quot;V&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;00000000&quot;},{&quot;raiderCode&quot;:&quot;VP5&quot;,&quot;raiderDetail&quot;:&quot;true&quot;,&quot;raiderPremium&quot;:&quot;004473&quot;},{&quot;raiderCode&quot;:&quot;KB2&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;000000&quot;}],&quot;binaryCustomerSignature&quot;:&quot;&quot;,&quot;binaryAgentSignature&quot;:&quot;&quot;,&quot;reportLanguage&quot;:&quot;T&quot;}],&quot;agentid&quot;:&quot;${AgentID}&quot;},&quot;headers&quot;:{&quot;sentDateTime&quot;:&quot;16-05-2019T17:36:42&quot;,&quot;uID&quot;:&quot;0bb672ce-7c37-49c1-e875-f5d0c3aa556b&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8243</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">TLPromptBackendWs/1.0/rest/quotationPdf/quotationPdfService</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${Aut}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3_5_1_ดูใบเสนอขาย OL" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;body&quot;:{&quot;datas&quot;:[{&quot;agentFullName&quot;:&quot;à¸­à¸ à¸´à¸£à¸±à¸&#x95;à¸&#x99;à¹&#x8c; à¸&#x9a;à¸¸à¸&#x8d;à¸&#x9b;à¸¥à¸±à¹&#x88;à¸&#x87;&quot;,&quot;agentBranch&quot;:&quot;à¸­à¸¡à¸&#x95;à¸°à¸&#x99;à¸&#x84;à¸£&quot;,&quot;roleType&quot;:&quot;agent&quot;,&quot;quotationno&quot;:&quot;&quot;,&quot;customerid&quot;:&quot;&quot;,&quot;quotationStatus&quot;:&quot;&quot;,&quot;flag&quot;:&quot;1&quot;,&quot;planCode&quot;:&quot;FA05&quot;,&quot;planName&quot;:&quot;à¸&#x97;à¸µà¹&#x81;à¸­à¸¥à¹&#x81;à¸&#x9e;à¸¥à¸&#x99; 15/05&quot;,&quot;preName&quot;:&quot;à¸&#x99;à¸²à¸&#x87;&quot;,&quot;firstName&quot;:&quot;à¸&#x87;à¸&#x87;à¸&#x87;à¸&#x87;à¸&#x87;à¸&#x87;à¸&#x87;à¸&#x87;à¸&#x87;&quot;,&quot;lastName&quot;:&quot;à¸&#x9e;à¸±à¸&#x99;à¸&#x9e;à¸±à¸&#x99;à¸&#x9e;à¸±à¸&#x99;&quot;,&quot;sex&quot;:&quot;F&quot;,&quot;age&quot;:&quot;37&quot;,&quot;endowYear&quot;:&quot;15&quot;,&quot;payYear&quot;:&quot;5&quot;,&quot;lifeBenfit&quot;:&quot;1000000&quot;,&quot;lifePremium&quot;:&quot;64600&quot;,&quot;premiumPerYear&quot;:&quot;64600&quot;,&quot;premiumOfTaxDeduction&quot;:&quot;100000&quot;,&quot;date&quot;:&quot;25620801&quot;,&quot;mode&quot;:&quot;4&quot;,&quot;plan&quot;:&quot;-1&quot;,&quot;timesend&quot;:&quot;&quot;,&quot;occupation&quot;:&quot;1&quot;,&quot;referenceNo&quot;:&quot;&quot;,&quot;listRaider&quot;:[{&quot;raiderCode&quot;:&quot;AC01&quot;,&quot;raiderDetail&quot;:&quot;800000&quot;,&quot;raiderPremium&quot;:&quot;000000432&quot;},{&quot;raiderCode&quot;:&quot;TAC01&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;000000000&quot;},{&quot;raiderCode&quot;:&quot;KG1&quot;,&quot;raiderDetail&quot;:&quot;800000&quot;,&quot;raiderPremium&quot;:&quot;000000160&quot;},{&quot;raiderCode&quot;:&quot;TKG1&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;000000000&quot;},{&quot;raiderCode&quot;:&quot;AC02&quot;,&quot;raiderDetail&quot;:&quot;1000000&quot;,&quot;raiderPremium&quot;:&quot;000001350&quot;},{&quot;raiderCode&quot;:&quot;TAC02&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;000000000&quot;},{&quot;raiderCode&quot;:&quot;KG2&quot;,&quot;raiderDetail&quot;:&quot;1000000&quot;,&quot;raiderPremium&quot;:&quot;000000330&quot;},{&quot;raiderCode&quot;:&quot;TKG2&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;000000000&quot;},{&quot;raiderCode&quot;:&quot;AP9&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;000000000&quot;},{&quot;raiderCode&quot;:&quot;AC03&quot;,&quot;raiderDetail&quot;:&quot;100000&quot;,&quot;raiderPremium&quot;:&quot;000000673&quot;},{&quot;raiderCode&quot;:&quot;SR2&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;0&quot;},{&quot;raiderCode&quot;:&quot;JP&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;00000000&quot;},{&quot;raiderCode&quot;:&quot;RP&quot;,&quot;raiderDetail&quot;:&quot;2500&quot;,&quot;raiderPremium&quot;:&quot;000001675&quot;},{&quot;raiderCode&quot;:&quot;TRP&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;00000000&quot;},{&quot;raiderCode&quot;:&quot;HCG&quot;,&quot;raiderDetail&quot;:&quot;500&quot;,&quot;raiderPremium&quot;:&quot;000000405&quot;},{&quot;raiderCode&quot;:&quot;D09&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;00000000&quot;},{&quot;raiderCode&quot;:&quot;D10&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;00000000&quot;},{&quot;raiderCode&quot;:&quot;D03&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;000000000&quot;},{&quot;raiderCode&quot;:&quot;D11&quot;,&quot;raiderDetail&quot;:&quot;700000&quot;,&quot;raiderPremium&quot;:&quot;000000770&quot;},{&quot;raiderCode&quot;:&quot;H&quot;,&quot;raiderDetail&quot;:&quot;1000&quot;,&quot;raiderPremium&quot;:&quot;001296&quot;},{&quot;raiderCode&quot;:&quot;J0&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;00000000&quot;},{&quot;raiderCode&quot;:&quot;TH&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;00000000&quot;},{&quot;raiderCode&quot;:&quot;G&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;0&quot;},{&quot;raiderCode&quot;:&quot;VP&quot;,&quot;raiderDetail&quot;:&quot;3&quot;,&quot;raiderPremium&quot;:&quot;002247&quot;},{&quot;raiderCode&quot;:&quot;V&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;00000000&quot;},{&quot;raiderCode&quot;:&quot;VP5&quot;,&quot;raiderDetail&quot;:&quot;true&quot;,&quot;raiderPremium&quot;:&quot;001594&quot;},{&quot;raiderCode&quot;:&quot;KB2&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;000000&quot;}],&quot;binaryCustomerSignature&quot;:&quot;&quot;,&quot;binaryAgentSignature&quot;:&quot;&quot;,&quot;reportLanguage&quot;:&quot;T&quot;,&quot;healthcheckflag&quot;:&quot;N&quot;}],&quot;agentid&quot;:&quot;${AgentID}&quot;},&quot;headers&quot;:{&quot;sentDateTime&quot;:&quot;01-08-2019T10:55:12&quot;,&quot;uID&quot;:&quot;${uID}&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8243</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">TLPromptBackendWs/1.0/rest/quotationPdf/quotationPdfServiceV2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(Bearerid)}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="3_5_2) ดูใบเสนอขาย unitlink 36" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">36</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">10800</stringProp>
        <stringProp name="ThreadGroup.delay">5</stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set agentid unitlink" enabled="true">
          <stringProp name="filename">/home/tleuser/Loadtest/TLproplus/Data/agentid_unitlink.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">agentid_unitlink</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
        <hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">4000</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
              <stringProp name="RandomTimer.range">100</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3_5_2_ดูใบเสนอขาย unitlink" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;body&quot;:{&quot;datas&quot;:[{&quot;rpp&quot;:&quot;4000&quot;,&quot;moneyRPP&quot;:&quot;640000&quot;,&quot;rsp&quot;:&quot;4000&quot;,&quot;moneyRSP&quot;:&quot;80000&quot;,&quot;planCode&quot;:&quot;UA02&quot;,&quot;lang&quot;:&quot;T&quot;,&quot;refNo&quot;:&quot;&quot;,&quot;age&quot;:&quot;38&quot;,&quot;sex&quot;:&quot;M&quot;,&quot;mode&quot;:&quot;4&quot;,&quot;em&quot;:&quot;0&quot;,&quot;agentName&quot;:&quot;น.ส. นฤมล ดาวกระจาย&quot;,&quot;consName&quot;:&quot;นาย รังสรรค์ สุขมา&quot;,&quot;preName&quot;:&quot;นาย&quot;,&quot;firstName&quot;:&quot;รังสรรค์&quot;,&quot;lastName&quot;:&quot;สุขมา&quot;,&quot;idCard&quot;:&quot;1730100005740&quot;,&quot;topup&quot;:&quot;0&quot;,&quot;topuptype&quot;:&quot;&quot;,&quot;sysdate&quot;:&quot;25620809&quot;,&quot;riderList&quot;:[{&quot;riderName&quot;:&quot;AC01&quot;,&quot;riderDetail&quot;:&quot;700000&quot;,&quot;riderPremium&quot;:&quot;567&quot;},{&quot;riderName&quot;:&quot;KG1&quot;,&quot;riderDetail&quot;:&quot;700000&quot;,&quot;riderPremium&quot;:&quot;140&quot;},{&quot;riderName&quot;:&quot;AC02&quot;,&quot;riderDetail&quot;:&quot;700000&quot;,&quot;riderPremium&quot;:&quot;1134&quot;},{&quot;riderName&quot;:&quot;KG2&quot;,&quot;riderDetail&quot;:&quot;700000&quot;,&quot;riderPremium&quot;:&quot;231&quot;},{&quot;riderName&quot;:&quot;AC03&quot;,&quot;riderDetail&quot;:&quot;140000&quot;,&quot;riderPremium&quot;:&quot;1334&quot;},{&quot;riderName&quot;:&quot;SR2&quot;,&quot;riderDetail&quot;:&quot;2&quot;,&quot;riderPremium&quot;:&quot;174&quot;},{&quot;riderName&quot;:&quot;RP&quot;,&quot;riderDetail&quot;:&quot;3500&quot;,&quot;riderPremium&quot;:&quot;2345&quot;},{&quot;riderName&quot;:&quot;HCG&quot;,&quot;riderDetail&quot;:&quot;500&quot;,&quot;riderPremium&quot;:&quot;370&quot;},{&quot;riderName&quot;:&quot;H&quot;,&quot;riderDetail&quot;:&quot;1000&quot;,&quot;riderPremium&quot;:&quot;1015&quot;},{&quot;riderName&quot;:&quot;VP&quot;,&quot;riderDetail&quot;:&quot;3&quot;,&quot;riderPremium&quot;:&quot;2012&quot;},{&quot;riderName&quot;:&quot;VP5&quot;,&quot;riderDetail&quot;:&quot;true&quot;,&quot;riderPremium&quot;:&quot;1328&quot;}],&quot;flag&quot;:&quot;&quot;,&quot;quotationStatus&quot;:&quot;&quot;,&quot;quotationno&quot;:&quot;&quot;,&quot;customerid&quot;:&quot;&quot;}],&quot;agentid&quot;:&quot;${agentid_unitlink}&quot;},&quot;headers&quot;:{&quot;sentDateTime&quot;:&quot;09-08-2019T10:29:25&quot;,&quot;uID&quot;:&quot;${uID}&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8243</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">TLPromptBackendWs/1.0/rest/quotationPdf/unitlinkPdfService</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(Bearerid)}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Old_3_5_2_ดูใบเสนอขาย unitlink" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;body&quot;:{&quot;datas&quot;:[{&quot;rpp&quot;:&quot;140000&quot;,&quot;moneyRPP&quot;:&quot;154000&quot;,&quot;rsp&quot;:&quot;0&quot;,&quot;moneyRSP&quot;:&quot;0&quot;,&quot;planCode&quot;:&quot;UA01&quot;,&quot;lang&quot;:&quot;T&quot;,&quot;refNo&quot;:&quot;&quot;,&quot;age&quot;:&quot;46&quot;,&quot;sex&quot;:&quot;M&quot;,&quot;mode&quot;:9,&quot;em&quot;:&quot;0&quot;,&quot;agentName&quot;:&quot;à¸&#x99;.à¸ª. à¸&#x99;à¸¤à¸¡à¸¥ à¸&#x94;à¸²à¸§à¸&#x81;à¸£à¸°à¸&#x88;à¸²à¸¢&quot;,&quot;consName&quot;:&quot;à¸&#x99;à¸²à¸¢ Rungsan sookma&quot;,&quot;preName&quot;:&quot;à¸&#x99;à¸²à¸¢&quot;,&quot;firstName&quot;:&quot;Rungsan&quot;,&quot;lastName&quot;:&quot;sookma&quot;,&quot;idCard&quot;:&quot;1730100005740&quot;,&quot;topup&quot;:&quot;0&quot;,&quot;topuptype&quot;:&quot;&quot;,&quot;sysdate&quot;:&quot;25620521&quot;,&quot;riderList&quot;:[{&quot;riderName&quot;:&quot;TP&quot;,&quot;riderDetail&quot;:&quot;154000&quot;,&quot;riderPremium&quot;:&quot;0&quot;}],&quot;flag&quot;:&quot;&quot;,&quot;quotationStatus&quot;:&quot;&quot;,&quot;quotationno&quot;:&quot;&quot;,&quot;customerid&quot;:&quot;&quot;}],&quot;agentid&quot;:&quot;${AgentID}&quot;},&quot;headers&quot;:{&quot;sentDateTime&quot;:&quot;21-05-2019T10:02:49&quot;,&quot;uID&quot;:&quot;b0401679-40d6-ea82-3a1a-92608a27c4a2&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8243</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">TLPromptBackendWs/1.0/rest/quotationPdf/unitlinkPdfService</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${Aut}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="3_5_3) ดูใบเสนอขาย UL 36" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">36</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">10800</stringProp>
        <stringProp name="ThreadGroup.delay">5</stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
        <hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">4000</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
              <stringProp name="RandomTimer.range">100</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3_5_3_ดูใบเสนอขาย UL" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;body&quot;:{&quot;datas&quot;:[{&quot;pcode&quot;:&quot;UEA&quot;,&quot;preName&quot;:&quot;à¸&#x99;à¸²à¸&#x87;à¸ªà¸²à¸§&quot;,&quot;firstName&quot;:&quot;à¸¢à¸¹à¹&#x81;à¸­à¸¥&quot;,&quot;lastName&quot;:&quot;à¹&#x81;à¸­à¸¥à¸¢à¸¹&quot;,&quot;age&quot;:&quot;36&quot;,&quot;sex&quot;:&quot;F&quot;,&quot;mode&quot;:&quot;2&quot;,&quot;tppay&quot;:&quot;1&quot;,&quot;special&quot;:&quot;1000&quot;,&quot;premiumMaster&quot;:&quot;6000&quot;,&quot;lifeSum&quot;:&quot;110000&quot;,&quot;pNameBy&quot;:&quot;à¸&#x99;.à¸ª.&quot;,&quot;fNameBy&quot;:&quot;à¸&#x99;à¸¤à¸¡à¸¥&quot;,&quot;lNameBy&quot;:&quot;à¸&#x94;à¸²à¸§à¸&#x81;à¸£à¸°à¸&#x88;à¸²à¸¢&quot;,&quot;branchName&quot;:&quot;à¸&#x8a;à¸¸à¸¡à¸&#x9e;à¸£&quot;,&quot;tel&quot;:&quot;0986639549&quot;,&quot;idCard&quot;:&quot;1730100005740&quot;,&quot;aorb&quot;:&quot;B&quot;,&quot;refNo&quot;:&quot;&quot;,&quot;riderList&quot;:[{&quot;riderName&quot;:&quot;AC01&quot;,&quot;riderDetail&quot;:&quot;100000&quot;,&quot;riderPremium&quot;:&quot;156&quot;},{&quot;riderName&quot;:&quot;AC02&quot;,&quot;riderDetail&quot;:&quot;100000&quot;,&quot;riderPremium&quot;:&quot;312&quot;},{&quot;riderName&quot;:&quot;AC03&quot;,&quot;riderDetail&quot;:&quot;20000&quot;,&quot;riderPremium&quot;:&quot;441&quot;},{&quot;riderName&quot;:&quot;G&quot;,&quot;riderDetail&quot;:&quot;G11&quot;,&quot;riderPremium&quot;:&quot;8528&quot;},{&quot;riderName&quot;:&quot;H&quot;,&quot;riderDetail&quot;:&quot;1000&quot;,&quot;riderPremium&quot;:&quot;2495&quot;},{&quot;riderName&quot;:&quot;HCG&quot;,&quot;riderDetail&quot;:&quot;500&quot;,&quot;riderPremium&quot;:&quot;780&quot;},{&quot;riderName&quot;:&quot;KG1&quot;,&quot;riderDetail&quot;:&quot;100000&quot;,&quot;riderPremium&quot;:&quot;39&quot;},{&quot;riderName&quot;:&quot;KG2&quot;,&quot;riderDetail&quot;:&quot;100000&quot;,&quot;riderPremium&quot;:&quot;65&quot;},{&quot;riderName&quot;:&quot;RP&quot;,&quot;riderDetail&quot;:&quot;1500&quot;,&quot;riderPremium&quot;:&quot;1950&quot;},{&quot;riderName&quot;:&quot;SR2&quot;,&quot;riderDetail&quot;:&quot;5&quot;,&quot;riderPremium&quot;:&quot;845&quot;},{&quot;riderName&quot;:&quot;VP5&quot;,&quot;riderDetail&quot;:&quot;true&quot;,&quot;riderPremium&quot;:&quot;3070&quot;}],&quot;flag&quot;:&quot;&quot;,&quot;quotationStatus&quot;:&quot;&quot;,&quot;quotationno&quot;:&quot;&quot;,&quot;customerid&quot;:&quot;&quot;}],&quot;agentid&quot;:&quot;${AgentID}&quot;},&quot;headers&quot;:{&quot;sentDateTime&quot;:&quot;01-08-2019T14:34:52&quot;,&quot;uID&quot;:&quot;${uID}&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8243</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">TLPromptBackendWs/1.0/rest/quotationPdf/ulPdfServiceV2/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(Bearerid)}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Old_3_5_3_ดูใบเสนอขาย UL" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;body&quot;:{&quot;datas&quot;:[{&quot;pcode&quot;:&quot;UZA&quot;,&quot;preName&quot;:&quot;à¸&#x99;à¸²à¸¢&quot;,&quot;firstName&quot;:&quot;Rungsan&quot;,&quot;lastName&quot;:&quot;sookma&quot;,&quot;age&quot;:&quot;46&quot;,&quot;sex&quot;:&quot;M&quot;,&quot;mode&quot;:&quot;9&quot;,&quot;tppay&quot;:&quot;&quot;,&quot;special&quot;:&quot;0&quot;,&quot;premiumMaster&quot;:&quot;150000&quot;,&quot;lifeSum&quot;:&quot;195000&quot;,&quot;pNameBy&quot;:&quot;à¸&#x99;.à¸ª.&quot;,&quot;fNameBy&quot;:&quot;à¸&#x99;à¸¤à¸¡à¸¥&quot;,&quot;lNameBy&quot;:&quot;à¸&#x94;à¸²à¸§à¸&#x81;à¸£à¸°à¸&#x88;à¸²à¸¢&quot;,&quot;branchName&quot;:&quot;à¸&#x8a;à¸¸à¸¡à¸&#x9e;à¸£&quot;,&quot;tel&quot;:&quot;0986639549&quot;,&quot;idCard&quot;:&quot;1730100005740&quot;,&quot;aorb&quot;:&quot;B&quot;,&quot;refNo&quot;:&quot;&quot;,&quot;flag&quot;:&quot;&quot;,&quot;quotationStatus&quot;:&quot;&quot;,&quot;quotationno&quot;:&quot;&quot;,&quot;customerid&quot;:&quot;&quot;}],&quot;agentid&quot;:&quot;${AgentID}&quot;},&quot;headers&quot;:{&quot;sentDateTime&quot;:&quot;21-05-2019T10:55:14&quot;,&quot;uID&quot;:&quot;598ed7a3-8b0e-fb5a-13ec-389a33bad9ac&quot;}}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8243</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">TLPromptBackendWs/1.0/rest/quotationPdf/ulPdfService/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${Aut}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="3_6) ดูใบคำขอ PDF 51" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">60</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">10800</stringProp>
        <stringProp name="ThreadGroup.delay">5</stringProp>
        <longProp name="ThreadGroup.start_time">1545120140000</longProp>
        <longProp name="ThreadGroup.end_time">1545120140000</longProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config EAppService" enabled="true">
          <stringProp name="filename">/home/tleuser/Loadtest/TLproplus/Data/Data_S.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">2applicationid,2agentid</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
        </CSVDataSet>
        <hashTree/>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="false"/>
        <hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">4000</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
              <stringProp name="RandomTimer.range">100</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="false">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">10000</stringProp>
            <stringProp name="RandomTimer.range">1000</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="3_6 ดูใบคำขอ PDF 130 requests " enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3_6_ดูใบคำขอ PDF 65 requests " enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;body&quot;:{&quot;datas&quot;:[{&quot;applicationid&quot;:&quot;42010&quot;}],&quot;agentid&quot;:&quot;0000004522&quot;},&quot;headers&quot;:{&quot;sentDateTime&quot;:&quot;19-06-2019T13:27:50&quot;,&quot;uID&quot;:&quot;cb07683a-21d0-0ddf-0ae7-5c1e0e7e8a64&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8243</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">TLPromptBackendWs/1.0/rest/applicationPdf/applicationPdfService/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${aaaaaaa</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">3000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3_6_ดูใบคำขอ PDF 130 requests " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;body&quot;:{&quot;datas&quot;:[{&quot;applicationid&quot;:&quot;${2applicationid}&quot;}],&quot;agentid&quot;:&quot;${2agentid}&quot;},&quot;headers&quot;:{&quot;sentDateTime&quot;:&quot;19-06-2019T13:27:50&quot;,&quot;uID&quot;:&quot;${uID}&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8243</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">TLPromptBackendWs/1.0/rest/applicationPdf/applicationPdfService/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(Bearerid)}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">10000</stringProp>
            <stringProp name="RandomTimer.range">5000</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="3_7 ส่งสาขา_10" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">${duration}</stringProp>
        <stringProp name="ThreadGroup.delay">${__longSum(55,${delay})}</stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="false"/>
        <hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">4000</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
              <stringProp name="RandomTimer.range">100</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">/home/tleuser/Loadtest/TLproplus/Data/sendToBranch.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">applicationid,applicationno,agentid</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3_7_1_ส่งสาขา Step chkTempReceiptService" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;body&quot;:{&quot;datas&quot;:[{&quot;rpNo&quot;:&quot;${__longSum(${__counter(FALSE,)},${startrpNo})}&quot;}],&quot;agentid&quot;:&quot;${agentid}&quot;},&quot;headers&quot;:{&quot;sentDateTime&quot;:&quot;18-06-2019T11:31:56&quot;,&quot;uID&quot;:&quot;${uID}&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8243</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">TLPromptBackendWs/1.0/rest/underwrite/chkTempReceiptService</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(Bearerid)}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1263204197">&quot;msg&quot;:&quot;ถูกใช้กับ</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3_7_2_ส่งสาขา Step applicationEAppService/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;body&quot;:{&quot;action&quot;:&quot;INSERT&quot;,&quot;datas&quot;:[{&quot;paymentM&quot;:{&quot;paymentslipno&quot;:&quot;${__longSum(${__counter(FALSE,)},${startrpNo})}&quot;},&quot;mcaapplicationM&quot;:{&quot;errmsgunw&quot;:&quot;&quot;,&quot;applicationid&quot;:&quot;${applicationid}&quot;,&quot;applicationno&quot;:&quot;applicationno&quot;},&quot;attachFileMs&quot;:[]}],&quot;searchkey&quot;:&quot;SUMBIT_NBAPP_BRANCH&quot;,&quot;agentid&quot;:&quot;${agentid}&quot;},&quot;headers&quot;:{&quot;sentDateTime&quot;:&quot;18-06-2019T11:31:57&quot;,&quot;uID&quot;:&quot;${uID}&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8243</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">TLPromptBackendWs/1.0/rest/application/applicationEAppService/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(Bearerid)}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3_7_3_ส่งสาขา Step applicationPdfAlfrescoService" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;body&quot;:{&quot;datas&quot;:[{&quot;applicationid&quot;:&quot;${applicationid}&quot;,&quot;saveAlfrescoStatus&quot;:&quot;sendToBranch&quot;}],&quot;agentid&quot;:&quot;${agentid}&quot;},&quot;headers&quot;:{&quot;sentDateTime&quot;:&quot;18-06-2019T11:32:18&quot;,&quot;uID&quot;:&quot;${uID}&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8243</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">TLPromptBackendWs/1.0/rest/applicationPdf/applicationPdfAlfrescoService</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(Bearerid)}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="3_8) ค้นหาผู้เอาประกันเก่าจากบัตรประชาชน 50" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">71</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1544105700000</longProp>
        <longProp name="ThreadGroup.end_time">1544147100000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">10800</stringProp>
        <stringProp name="ThreadGroup.delay">5</stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
        <hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">4000</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
              <stringProp name="RandomTimer.range">100</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="ผู้มุ่งหวัง--&gt;เพิ่มรายชื่อผู้มุ่งหวัง--&gt;ค้นหาโดย ID" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://pre-tlprompt-api.thailife.com:8243/TLPromptBackendWs/1.0/rest/application/customer/" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8243</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">TLPromptBackendWs/1.0/rest/application/customer/</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://pre-tlprompt.thailife.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authorization,content-type</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ค้นหาโดย ID" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;body&quot;:{&quot;datas&quot;:[{&quot;idNo&quot;:&quot;${IDCard}&quot;,&quot;personID&quot;:&quot;${personID}&quot;}],&quot;agentid&quot;:&quot;45323537&quot;},&quot;headers&quot;:{&quot;sentDateTime&quot;:&quot;02-07-2018T11:15:05&quot;,&quot;uID&quot;:&quot;0bf3d9a2-3cf5-ba31-35a3-df9da60a8266&quot;}}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8243</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">TLPromptBackendWs/1.0/rest/application/customer/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://pre-tlprompt.thailife.com</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${Aut}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://pre-tlprompt.thailife.com/</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3_8_ค้นหาโดย ID" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;body&quot;:{&quot;datas&quot;:[{&quot;idNo&quot;:&quot;${IDCard}&quot;,&quot;personID&quot;:&quot;${personID}&quot;}],&quot;agentid&quot;:&quot;${personID}&quot;},&quot;headers&quot;:{&quot;sentDateTime&quot;:&quot;${sentDateTime}&quot;,&quot;uID&quot;:&quot;${uID}&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8243</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">TLPromptBackendWs/1.0/rest/customer/findCustomer/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin_1}</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(Bearerid)}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${Referer_1}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ค้นหาผู้มุ่งหวัง โดย ID" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;body&quot;:{&quot;datas&quot;:[{&quot;idNo&quot;:&quot;${IDCard}&quot;,&quot;personID&quot;:&quot;${personID}&quot;}],&quot;agentid&quot;:&quot;${personID}&quot;},&quot;headers&quot;:{&quot;sentDateTime&quot;:&quot;19-06-2018T16:30:19&quot;,&quot;uID&quot;:&quot;f7ac7823-7e9e-ccd3-6062-f3ae43b5e7b7&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8243</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">TLPromptBackendWs/1.0/rest/application/customer/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${Aut}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://pre-tlprompt.thailife.com/</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://pre-tlprompt.thailife.com</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://sit-tlproplus.thailife.com</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${Aut}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://sit-tlproplus.thailife.com/</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
            <boolProp name="ResultCollector.error_logging">true</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
            <stringProp name="RandomTimer.range">1000</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="quotationPdfServiceV2 17" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">17</stringProp>
        <stringProp name="ThreadGroup.ramp_time">60</stringProp>
        <longProp name="ThreadGroup.start_time">1544105700000</longProp>
        <longProp name="ThreadGroup.end_time">1544147100000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">10800</stringProp>
        <stringProp name="ThreadGroup.delay">5</stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
        <hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">4000</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
              <stringProp name="RandomTimer.range">100</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="quotationPdfServiceV2" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="quotationPdfServiceV2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;body&quot;:{&quot;datas&quot;:[{&quot;agentFullName&quot;:&quot;à¸­à¸ à¸´à¸£à¸±à¸&#x95;à¸&#x99;à¹&#x8c; à¸&#x9a;à¸¸à¸&#x8d;à¸&#x9b;à¸¥à¸±à¹&#x88;à¸&#x87;&quot;,&quot;agentBranch&quot;:&quot;à¸­à¸¡à¸&#x95;à¸°à¸&#x99;à¸&#x84;à¸£&quot;,&quot;quotationno&quot;:&quot;0000632152EN3220191025105715&quot;,&quot;customerid&quot;:&quot;e1e6da25-8960-47b3-a3af-9165643c0d98&quot;,&quot;quotationStatus&quot;:&quot;R&quot;,&quot;flag&quot;:&quot;3&quot;,&quot;planCode&quot;:&quot;EN32&quot;,&quot;planName&quot;:&quot;à¸&#x98;à¸&#x99;à¸&#x97;à¸£à¸±à¸&#x9e;à¸¢à¹&#x8c; 85/10&quot;,&quot;preName&quot;:&quot;à¸&#x99;à¸²à¸¢&quot;,&quot;firstName&quot;:&quot;à¸£à¸±à¸&#x87;à¸ªà¸£à¸£à¸&#x84;à¹&#x8c; &quot;,&quot;lastName&quot;:&quot;à¸ªà¸¸à¸&#x82;à¸¡à¸²&quot;,&quot;sex&quot;:&quot;M&quot;,&quot;age&quot;:&quot;35&quot;,&quot;endowYear&quot;:&quot;85&quot;,&quot;payYear&quot;:&quot;10&quot;,&quot;lifeBenfit&quot;:&quot;1000000&quot;,&quot;lifePremium&quot;:&quot;27100&quot;,&quot;premiumPerYear&quot;:&quot;27100&quot;,&quot;premiumOfTaxDeduction&quot;:&quot;72860&quot;,&quot;date&quot;:&quot;25621025&quot;,&quot;mode&quot;:&quot;2&quot;,&quot;plan&quot;:&quot;-1&quot;,&quot;timesend&quot;:&quot;0000632152_EN32_2${__threadNum}&quot;,&quot;occupation&quot;:&quot;2&quot;,&quot;referenceNo&quot;:&quot;4000000${__threadNum}&quot;,&quot;listRaider&quot;:[{&quot;raiderCode&quot;:&quot;AC01&quot;,&quot;raiderDetail&quot;:&quot;1000000&quot;,&quot;raiderPremium&quot;:&quot;000001560&quot;},{&quot;raiderCode&quot;:&quot;TAC01&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;000000000&quot;},{&quot;raiderCode&quot;:&quot;KG1&quot;,&quot;raiderDetail&quot;:&quot;1000000&quot;,&quot;raiderPremium&quot;:&quot;000000390&quot;},{&quot;raiderCode&quot;:&quot;TKG1&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;000000000&quot;},{&quot;raiderCode&quot;:&quot;AC02&quot;,&quot;raiderDetail&quot;:&quot;1000000&quot;,&quot;raiderPremium&quot;:&quot;000003120&quot;},{&quot;raiderCode&quot;:&quot;TAC02&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;000000000&quot;},{&quot;raiderCode&quot;:&quot;KG2&quot;,&quot;raiderDetail&quot;:&quot;1000000&quot;,&quot;raiderPremium&quot;:&quot;000000650&quot;},{&quot;raiderCode&quot;:&quot;TKG2&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;000000000&quot;},{&quot;raiderCode&quot;:&quot;AP9&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;000000000&quot;},{&quot;raiderCode&quot;:&quot;AC03&quot;,&quot;raiderDetail&quot;:&quot;100000&quot;,&quot;raiderPremium&quot;:&quot;000001849&quot;},{&quot;raiderCode&quot;:&quot;SR2&quot;,&quot;raiderDetail&quot;:&quot;1&quot;,&quot;raiderPremium&quot;:&quot;169&quot;},{&quot;raiderCode&quot;:&quot;JP&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;00000000&quot;},{&quot;raiderCode&quot;:&quot;RP&quot;,&quot;raiderDetail&quot;:&quot;2500&quot;,&quot;raiderPremium&quot;:&quot;000003250&quot;},{&quot;raiderCode&quot;:&quot;TRP&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;00000000&quot;},{&quot;raiderCode&quot;:&quot;HCG&quot;,&quot;raiderDetail&quot;:&quot;500&quot;,&quot;raiderPremium&quot;:&quot;000000715&quot;},{&quot;raiderCode&quot;:&quot;D09&quot;,&quot;raiderDetail&quot;:&quot;1000000&quot;,&quot;raiderPremium&quot;:&quot;000004400&quot;},{&quot;raiderCode&quot;:&quot;D10&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;00000000&quot;},{&quot;raiderCode&quot;:&quot;D03&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;000000000&quot;},{&quot;raiderCode&quot;:&quot;D11&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;000000000&quot;},{&quot;raiderCode&quot;:&quot;H&quot;,&quot;raiderDetail&quot;:&quot;1000&quot;,&quot;raiderPremium&quot;:&quot;001792&quot;},{&quot;raiderCode&quot;:&quot;J0&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;00000000&quot;},{&quot;raiderCode&quot;:&quot;TH&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;00000000&quot;},{&quot;raiderCode&quot;:&quot;G&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;0&quot;},{&quot;raiderCode&quot;:&quot;VP&quot;,&quot;raiderDetail&quot;:&quot;6&quot;,&quot;raiderPremium&quot;:&quot;010221&quot;},{&quot;raiderCode&quot;:&quot;V&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;00000000&quot;},{&quot;raiderCode&quot;:&quot;VP5&quot;,&quot;raiderDetail&quot;:&quot;true&quot;,&quot;raiderPremium&quot;:&quot;002326&quot;},{&quot;raiderCode&quot;:&quot;KB2&quot;,&quot;raiderDetail&quot;:&quot;0&quot;,&quot;raiderPremium&quot;:&quot;000000&quot;}],&quot;binaryCustomerSignature&quot;:&quot;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&quot;,&quot;binaryAgentSignature&quot;:&quot;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&quot;,&quot;reportLanguage&quot;:&quot;T&quot;,&quot;healthcheckflag&quot;:&quot;N&quot;}],&quot;agentid&quot;:&quot;0000632152&quot;},&quot;headers&quot;:{&quot;sentDateTime&quot;:&quot;25-10-2019T10:58:16&quot;,&quot;uID&quot;:&quot;8a5d0256-a304-649a-e728-f2ba9bd51e11&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8243</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">TLPromptBackendWs/1.0/rest/quotationPdf/quotationPdfServiceV2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(Bearerid)}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="3_9) UL_Get_Ref" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">300</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <longProp name="ThreadGroup.start_time">1545120140000</longProp>
        <longProp name="ThreadGroup.end_time">1545120140000</longProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config EAppService" enabled="true">
          <stringProp name="filename">/home/tleuser/Loadtest/TLproplus/Data/applicationid_agentid.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">2applicationid,2agentid</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
        </CSVDataSet>
        <hashTree/>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="false"/>
        <hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">4000</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
              <stringProp name="RandomTimer.range">100</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">10000</stringProp>
            <stringProp name="RandomTimer.range">1000</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UL_Ref" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;body&quot;:{&quot;datas&quot;:[{&quot;pcode&quot;:&quot;UWA&quot;,&quot;preName&quot;:&quot;à¸&#x99;à¸²à¸&#x87;à¸ªà¸²à¸§&quot;,&quot;firstName&quot;:&quot;rungsan&quot;,&quot;lastName&quot;:&quot;aoo&quot;,&quot;age&quot;:&quot;30&quot;,&quot;sex&quot;:&quot;F&quot;,&quot;mode&quot;:&quot;1&quot;,&quot;tppay&quot;:&quot;1&quot;,&quot;special&quot;:&quot;1000&quot;,&quot;premiumMaster&quot;:&quot;12000&quot;,&quot;lifeSum&quot;:&quot;110000&quot;,&quot;pNameBy&quot;:&quot;à¸&#x99;.à¸ª.&quot;,&quot;fNameBy&quot;:&quot;à¸&#x99;à¸¤à¸¡à¸¥&quot;,&quot;lNameBy&quot;:&quot;à¸&#x94;à¸²à¸§à¸&#x81;à¸£à¸°à¸&#x88;à¸²à¸¢&quot;,&quot;branchName&quot;:&quot;à¸&#x8a;à¸¸à¸¡à¸&#x9e;à¸£&quot;,&quot;tel&quot;:&quot;0986639549&quot;,&quot;idCard&quot;:&quot;0000591523&quot;,&quot;aorb&quot;:&quot;A&quot;,&quot;refNo&quot;:&quot;&quot;,&quot;riderList&quot;:[{&quot;riderName&quot;:&quot;AC01&quot;,&quot;riderDetail&quot;:&quot;100000&quot;,&quot;riderPremium&quot;:&quot;300&quot;},{&quot;riderName&quot;:&quot;AC02&quot;,&quot;riderDetail&quot;:&quot;100000&quot;,&quot;riderPremium&quot;:&quot;600&quot;},{&quot;riderName&quot;:&quot;KG1&quot;,&quot;riderDetail&quot;:&quot;100000&quot;,&quot;riderPremium&quot;:&quot;75&quot;},{&quot;riderName&quot;:&quot;KG2&quot;,&quot;riderDetail&quot;:&quot;100000&quot;,&quot;riderPremium&quot;:&quot;125&quot;}],&quot;flag&quot;:&quot;2&quot;,&quot;quotationStatus&quot;:&quot;N&quot;,&quot;quotationno&quot;:&quot;0000591523UWA20190704135659&quot;,&quot;customerid&quot;:&quot;b751c8a3-2bf9-44a7-a26f-da830568de6e&quot;}],&quot;agentid&quot;:&quot;${2agentid}&quot;},&quot;headers&quot;:{&quot;sentDateTime&quot;:&quot;04-07-2019T13:56:59&quot;,&quot;uID&quot;:&quot;${uID}&quot;}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port">8243</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">TLPromptBackendWs/1.0/rest/quotationPdf/ulPdfServiceV2/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(Bearerid)}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UL_Ref" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;body&quot;:{&quot;datas&quot;:[{&quot;pcode&quot;:&quot;UWA&quot;,&quot;preName&quot;:&quot;à¸&#x99;à¸²à¸&#x87;à¸ªà¸²à¸§&quot;,&quot;firstName&quot;:&quot;rungsan&quot;,&quot;lastName&quot;:&quot;aoo&quot;,&quot;age&quot;:&quot;30&quot;,&quot;sex&quot;:&quot;F&quot;,&quot;mode&quot;:&quot;1&quot;,&quot;tppay&quot;:&quot;1&quot;,&quot;special&quot;:&quot;1000&quot;,&quot;premiumMaster&quot;:&quot;12000&quot;,&quot;lifeSum&quot;:&quot;110000&quot;,&quot;pNameBy&quot;:&quot;à¸&#x99;.à¸ª.&quot;,&quot;fNameBy&quot;:&quot;à¸&#x99;à¸¤à¸¡à¸¥&quot;,&quot;lNameBy&quot;:&quot;à¸&#x94;à¸²à¸§à¸&#x81;à¸£à¸°à¸&#x88;à¸²à¸¢&quot;,&quot;branchName&quot;:&quot;à¸&#x8a;à¸¸à¸¡à¸&#x9e;à¸£&quot;,&quot;tel&quot;:&quot;0986639549&quot;,&quot;idCard&quot;:&quot;0000591523&quot;,&quot;aorb&quot;:&quot;A&quot;,&quot;refNo&quot;:&quot;&quot;,&quot;riderList&quot;:[{&quot;riderName&quot;:&quot;AC01&quot;,&quot;riderDetail&quot;:&quot;100000&quot;,&quot;riderPremium&quot;:&quot;300&quot;},{&quot;riderName&quot;:&quot;AC02&quot;,&quot;riderDetail&quot;:&quot;100000&quot;,&quot;riderPremium&quot;:&quot;600&quot;},{&quot;riderName&quot;:&quot;KG1&quot;,&quot;riderDetail&quot;:&quot;100000&quot;,&quot;riderPremium&quot;:&quot;75&quot;},{&quot;riderName&quot;:&quot;KG2&quot;,&quot;riderDetail&quot;:&quot;100000&quot;,&quot;riderPremium&quot;:&quot;125&quot;}],&quot;flag&quot;:&quot;2&quot;,&quot;quotationStatus&quot;:&quot;N&quot;,&quot;quotationno&quot;:&quot;0000591523UWA20190704135659&quot;,&quot;customerid&quot;:&quot;b751c8a3-2bf9-44a7-a26f-da830568de6e&quot;}],&quot;agentid&quot;:&quot;0000591523&quot;},&quot;headers&quot;:{&quot;sentDateTime&quot;:&quot;04-07-2019T13:56:59&quot;,&quot;uID&quot;:&quot;49689de3-09b0-5dbe-97f6-ee8eadeb3c81&quot;}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port">8243</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">TLPromptBackendWs/1.0/rest/quotationPdf/ulPdfServiceV2/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer a9f45a47-6c44-3995-b841-042af6eb72ca</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">10000</stringProp>
            <stringProp name="RandomTimer.range">5000</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="3_10) Unitlink_Get_Ref" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">300</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <longProp name="ThreadGroup.start_time">1545120140000</longProp>
        <longProp name="ThreadGroup.end_time">1545120140000</longProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config EAppService" enabled="true">
          <stringProp name="filename">/home/tleuser/Loadtest/TLproplus/Data/applicationid_agentid.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">2applicationid,2agentid</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
        </CSVDataSet>
        <hashTree/>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="false"/>
        <hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Unitlink_Ref" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;body&quot;:{&quot;datas&quot;:[{&quot;rpp&quot;:&quot;13000&quot;,&quot;moneyRPP&quot;:&quot;521000&quot;,&quot;rsp&quot;:&quot;12000&quot;,&quot;moneyRSP&quot;:&quot;60000&quot;,&quot;planCode&quot;:&quot;UA02&quot;,&quot;lang&quot;:&quot;T&quot;,&quot;refNo&quot;:&quot;&quot;,&quot;age&quot;:&quot;37&quot;,&quot;sex&quot;:&quot;F&quot;,&quot;mode&quot;:1,&quot;em&quot;:&quot;0&quot;,&quot;agentName&quot;:&quot;à¸&#x99;.à¸ª. à¸&#x99;à¸¤à¸¡à¸¥ à¸&#x94;à¸²à¸§à¸&#x81;à¸£à¸°à¸&#x88;à¸²à¸¢&quot;,&quot;consName&quot;:&quot;à¸&#x99;à¸²à¸&#x87;à¸ªà¸²à¸§ à¹&#x80;à¸­à¸&#x81;à¸&#x81;à¸&#x81;à¸&#x81;à¸&#x81; à¸ªà¸ªà¸ªà¸ªà¸ªà¸ªà¸ªà¸ª&quot;,&quot;preName&quot;:&quot;à¸&#x99;à¸²à¸&#x87;à¸ªà¸²à¸§&quot;,&quot;firstName&quot;:&quot;à¹&#x80;à¸­à¸&#x81;à¸&#x81;à¸&#x81;à¸&#x81;à¸&#x81;&quot;,&quot;lastName&quot;:&quot;à¸ªà¸ªà¸ªà¸ªà¸ªà¸ªà¸ªà¸ª&quot;,&quot;idCard&quot;:&quot;0000591523&quot;,&quot;topup&quot;:&quot;0&quot;,&quot;topuptype&quot;:&quot;&quot;,&quot;sysdate&quot;:&quot;25620704&quot;,&quot;riderList&quot;:[{&quot;riderName&quot;:&quot;AC01&quot;,&quot;riderDetail&quot;:&quot;500000&quot;,&quot;riderPremium&quot;:&quot;1500&quot;},{&quot;riderName&quot;:&quot;KG1&quot;,&quot;riderDetail&quot;:&quot;500000&quot;,&quot;riderPremium&quot;:&quot;375&quot;},{&quot;riderName&quot;:&quot;AC03&quot;,&quot;riderDetail&quot;:&quot;110000&quot;,&quot;riderPremium&quot;:&quot;3910&quot;},{&quot;riderName&quot;:&quot;SR2&quot;,&quot;riderDetail&quot;:&quot;1&quot;,&quot;riderPremium&quot;:&quot;325&quot;},{&quot;riderName&quot;:&quot;HCG&quot;,&quot;riderDetail&quot;:&quot;4000&quot;,&quot;riderPremium&quot;:&quot;12000&quot;},{&quot;riderName&quot;:&quot;G&quot;,&quot;riderDetail&quot;:&quot;G12&quot;,&quot;riderPremium&quot;:&quot;29000&quot;},{&quot;riderName&quot;:&quot;VP5&quot;,&quot;riderDetail&quot;:&quot;true&quot;,&quot;riderPremium&quot;:&quot;5904&quot;}],&quot;flag&quot;:&quot;2&quot;,&quot;quotationStatus&quot;:&quot;N&quot;,&quot;quotationno&quot;:&quot;0000591523UA0220190704161740&quot;,&quot;customerid&quot;:&quot;c71b6bb8-a2f1-44ce-99d4-5fb1a68bcc0c&quot;}],&quot;agentid&quot;:&quot;${Aut}&quot;},&quot;headers&quot;:{&quot;sentDateTime&quot;:&quot;04-07-2019T16:17:41&quot;,&quot;uID&quot;:&quot;${uID}&quot;}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port">8243</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">TLPromptBackendWs/1.0/rest/quotationPdf/unitlinkPdfService</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(Bearerid)}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Unitlink_Ref" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;body&quot;:{&quot;datas&quot;:[{&quot;rpp&quot;:&quot;13000&quot;,&quot;moneyRPP&quot;:&quot;521000&quot;,&quot;rsp&quot;:&quot;12000&quot;,&quot;moneyRSP&quot;:&quot;60000&quot;,&quot;planCode&quot;:&quot;UA02&quot;,&quot;lang&quot;:&quot;T&quot;,&quot;refNo&quot;:&quot;&quot;,&quot;age&quot;:&quot;37&quot;,&quot;sex&quot;:&quot;F&quot;,&quot;mode&quot;:1,&quot;em&quot;:&quot;0&quot;,&quot;agentName&quot;:&quot;à¸&#x99;.à¸ª. à¸&#x99;à¸¤à¸¡à¸¥ à¸&#x94;à¸²à¸§à¸&#x81;à¸£à¸°à¸&#x88;à¸²à¸¢&quot;,&quot;consName&quot;:&quot;à¸&#x99;à¸²à¸&#x87;à¸ªà¸²à¸§ à¹&#x80;à¸­à¸&#x81;à¸&#x81;à¸&#x81;à¸&#x81;à¸&#x81; à¸ªà¸ªà¸ªà¸ªà¸ªà¸ªà¸ªà¸ª&quot;,&quot;preName&quot;:&quot;à¸&#x99;à¸²à¸&#x87;à¸ªà¸²à¸§&quot;,&quot;firstName&quot;:&quot;à¹&#x80;à¸­à¸&#x81;à¸&#x81;à¸&#x81;à¸&#x81;à¸&#x81;&quot;,&quot;lastName&quot;:&quot;à¸ªà¸ªà¸ªà¸ªà¸ªà¸ªà¸ªà¸ª&quot;,&quot;idCard&quot;:&quot;0000591523&quot;,&quot;topup&quot;:&quot;0&quot;,&quot;topuptype&quot;:&quot;&quot;,&quot;sysdate&quot;:&quot;25620704&quot;,&quot;riderList&quot;:[{&quot;riderName&quot;:&quot;AC01&quot;,&quot;riderDetail&quot;:&quot;500000&quot;,&quot;riderPremium&quot;:&quot;1500&quot;},{&quot;riderName&quot;:&quot;KG1&quot;,&quot;riderDetail&quot;:&quot;500000&quot;,&quot;riderPremium&quot;:&quot;375&quot;},{&quot;riderName&quot;:&quot;AC03&quot;,&quot;riderDetail&quot;:&quot;110000&quot;,&quot;riderPremium&quot;:&quot;3910&quot;},{&quot;riderName&quot;:&quot;SR2&quot;,&quot;riderDetail&quot;:&quot;1&quot;,&quot;riderPremium&quot;:&quot;325&quot;},{&quot;riderName&quot;:&quot;HCG&quot;,&quot;riderDetail&quot;:&quot;4000&quot;,&quot;riderPremium&quot;:&quot;12000&quot;},{&quot;riderName&quot;:&quot;G&quot;,&quot;riderDetail&quot;:&quot;G12&quot;,&quot;riderPremium&quot;:&quot;29000&quot;},{&quot;riderName&quot;:&quot;VP5&quot;,&quot;riderDetail&quot;:&quot;true&quot;,&quot;riderPremium&quot;:&quot;5904&quot;}],&quot;flag&quot;:&quot;2&quot;,&quot;quotationStatus&quot;:&quot;N&quot;,&quot;quotationno&quot;:&quot;0000591523UA0220190704161740&quot;,&quot;customerid&quot;:&quot;c71b6bb8-a2f1-44ce-99d4-5fb1a68bcc0c&quot;}],&quot;agentid&quot;:&quot;0000591523&quot;},&quot;headers&quot;:{&quot;sentDateTime&quot;:&quot;04-07-2019T16:17:41&quot;,&quot;uID&quot;:&quot;ccb55889-5a31-613e-fb0e-f52635732653&quot;}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port">8243</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">TLPromptBackendWs/1.0/rest/quotationPdf/unitlinkPdfService</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${Aut}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">10000</stringProp>
            <stringProp name="RandomTimer.range">5000</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="sellinfo" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1000</stringProp>
        <stringProp name="ThreadGroup.ramp_time">3</stringProp>
        <longProp name="ThreadGroup.start_time">1544105700000</longProp>
        <longProp name="ThreadGroup.end_time">1544147100000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">300</stringProp>
        <stringProp name="ThreadGroup.delay">${__longSum(5,${0})}</stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
        <hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">4000</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
              <stringProp name="RandomTimer.range">100</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get_token" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="grant_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">grant_type</stringProp>
                  <stringProp name="Argument.value">client_credentials</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client_secret" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">client_secret</stringProp>
                  <stringProp name="Argument.value">YB68rZljM9c32x2r88G9yrAvaGEa</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                  <stringProp name="Argument.value">1jFxkCVTWdrDyOqch4P4pTLlhuwa</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8243</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">aaaaaaa</stringProp>
              <stringProp name="RegexExtractor.regex">{&quot;access_token&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="te" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="sellinfo" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;body&quot;: {&#xd;
      &quot;action&quot;: &quot;SELECT&quot;,&#xd;
      &quot;datas&quot;: [&#xd;
          {&#xd;
              &quot;citizenID&quot;: &quot;1759900256681&quot;,&#xd;
              &quot;perid&quot;: &quot;${AgentID}&quot;,&#xd;
              &quot;type&quot;: &quot;P&quot;&#xd;
          }&#xd;
      ]&#xd;
  },&#xd;
  &quot;headers&quot;: {&#xd;
      &quot;sentDateTime&quot;: &quot;14-03-2019T12:27:06&quot;,&#xd;
      &quot;uID&quot;: &quot;${uID}&quot;&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8243</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">TLPromptBackendWs/1.0/rest/saleinfo/saleinfoService</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${Aut}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://sit-tlproplus.thailife.com/</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${aaaaaaa}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${Referer_1}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
            <boolProp name="ResultCollector.error_logging">true</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <boolProp name="useGroupName">true</boolProp>
      </ResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseTimesOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Times Over Time" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <longProp name="interval_grouping">500</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.HitsPerSecondGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Hits per Second" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.reporters.FlexibleFileWriter guiclass="kg.apc.jmeter.reporters.FlexibleFileWriterGui" testclass="kg.apc.jmeter.reporters.FlexibleFileWriter" testname="jp@gc - Flexible File Writer" enabled="false">
        <stringProp name="filename">/home/tleuser/Loadtest/TLproplus/Resultresponse</stringProp>
        <stringProp name="columns">|startTime|\t|endTime|\t    &quot;requestData&quot;|requestData|\t   &quot;responseData&quot;|responseData|\r\n</stringProp>
        <boolProp name="overwrite">true</boolProp>
        <stringProp name="header">startTime     endTime     requestData     responseData \r\n</stringProp>
        <stringProp name="footer"></stringProp>
      </kg.apc.jmeter.reporters.FlexibleFileWriter>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>true</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>true</responseData>
            <samplerData>true</samplerData>
            <xml>true</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>true</responseHeaders>
            <requestHeaders>true</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <fileName>true</fileName>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">~/Result${__time(YMD,)}_${__time(HMS,)}.jtl</stringProp>
      </ResultCollector>
      <hashTree/>
      <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
        <stringProp name="filename"></stringProp>
        <stringProp name="parameters"></stringProp>
        <boolProp name="resetInterpreter">false</boolProp>
        <stringProp name="script">String acid=&quot;${COOKIE_AWSALB}&quot;;
FileWriter fstream = new FileWriter(&quot;/home/tleuser/Loadtest/TLproplus/resultcookeeAAAA.txt&quot;,true);
fstream.write(acid+&quot;\n&quot;);
fstream.close();
</stringProp>
      </BeanShellPostProcessor>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
